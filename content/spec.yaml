openapi: 3.0.1
x-stoplight:
  id: 5mn3eoncafo87
info:
  title: Easypay API
  description: |-
    <a href='https://www.easypay.pt/en/terms-conditions-and-legal-terms' class='item'>Terms conditions and legal terms</a><br><a href='https://www.easypay.pt/en/privacy-policy' class='item'>Privacy Policy</a><br><br><b>EasyPay</b> API allows you to query payment meta-data, receive payment notifications and generate payment references. Since EasyPay API is based on REST principles, itÂ´s very easy to write and test applications. You can use our code examples in PHP/CURL to test all the JSON payloads for Easypay Payment Service API.<br><br> We have two distinct environments on our API Services:<br> - If you are looking to receive payments, please use the <a href='https://api.prod.easypay.pt/docs#' class='item'><b>Production Documentation</b></a>.<br> - If you are looking to test or integrate, please use the <a href='https://api.test.easypay.pt/docs#' class='item'><b>Sandbox Documentation</b></a>. This environment will always have the latest road map deployments, usually all deployments are sent to production within 10 days. This environment is not meant for <b>Load Tests</b>, please do not use for this purpose, you might be blocked. <br><br>
    # Response Format
    Our default response produces a <i><b>application/json</b></i>, but the <b>Accept</b> request-header field can be used to specify certain media types which are acceptable for the response. <br>Our available options are: <i>application/json</i>, <i>application/xml</i>, <i>text/csv</i>
    # Authentication
    The Easypay API use <a class='item' href="https://backoffice.easypay.pt/apikeys">API keys</a> to authenticate requests. The keys should be included as Headers. if fails it will always respond 403.<br>

    <!-- ReDoc-Inject: <security-definitions> -->
  contact:
    name: Easypay Documentation
    email: tec@easypay.pt
  version: '2.0'
  x-logo:
    url: 'https://www.easypay.pt/images-old/logo_esypay_canvas.png'
    altText: easypay
servers:
  - url: 'https://api.prod.easypay.pt/2.0'
    description: Production
  - url: 'https://api.test.easypay.pt/2.0'
    description: Sandbox
security:
  - accountId: []
    apiKey: []
tags:
  - name: Single Payment
    description: 'Payments used on a one time purchase <br/> <div class="pc-tab"> <input checked="checked" id="tab1" type="radio" name="pct" /> <input id="tab2" type="radio" name="pct" /> <input id="tab3" type="radio" name="pct" /> <input id="tab4" type="radio" name="pct" /> <input id="tab5" type="radio" name="pct" /> <input id="tab6" type="radio" name="pct" /> <input id="tab7" type="radio" name="pct" /> <input id="tab8" type="radio" name="pct" /> <nav> <ul> <li class="tab1"> <label id="ico1" for="tab1" class="active" onclick=''document.getElementById("ico1").className = "active"; document.getElementById("ico2").className = ""; document.getElementById("ico3").className = "" document.getElementById("ico4").className = ""; document.getElementById("ico5").className = ""; document.getElementById("ico6").className =""; document.getElementById("ico7").className =""; document.getElementById("ico8").className =""''><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/mb.png"/></label> </li> <li class="tab2"> <label id="ico2" for="tab2" onclick=''document.getElementById("ico2").className = "active"; document.getElementById("ico1").className = ""; document.getElementById("ico3").className = "" document.getElementById("ico4").className = ""; document.getElementById("ico5").className = ""; document.getElementById("ico6").className =""; document.getElementById("ico7").className =""; document.getElementById("ico8").className =""''><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/mbway.png"/></label> </li> <li class="tab3"> <label id="ico3" for="tab3" onclick=''document.getElementById("ico3").className = "active"; document.getElementById("ico2").className = ""; document.getElementById("ico1").className = "";  document.getElementById("ico4").className = "";  document.getElementById("ico5").className = ""; document.getElementById("ico6").className =""; document.getElementById("ico7").className ="" document.getElementById("ico8").className ="";''><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/visa.png"/></label> </li> <li class="tab4"> <label id="ico4" for="tab4" onclick=''document.getElementById("ico4").className = "active"; document.getElementById("ico2").className = ""; document.getElementById("ico1").className = ""; document.getElementById("ico3").className = ""; document.getElementById("ico5").className = ""; document.getElementById("ico6").className =""; document.getElementById("ico7").className =""; document.getElementById("ico8").className =""''><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/dd.png"/></label> </li> <li class="tab5"> <label id="ico5" for="tab5" onclick=''document.getElementById("ico5").className = "active"; document.getElementById("ico2").className = ""; document.getElementById("ico1").className = "";  document.getElementById("ico3").className = ""; document.getElementById("ico4").className =""; document.getElementById("ico6").className =""; document.getElementById("ico7").className =""; document.getElementById("ico8").className =""''><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/boleto.png"/></label> </li> <li class="tab6"> <label id="ico6" for="tab6" onclick=''document.getElementById("ico6").className = "active"; document.getElementById("ico2").className = ""; document.getElementById("ico1").className = "";  document.getElementById("ico3").className = ""; document.getElementById("ico4").className =""; document.getElementById("ico5").className =""; document.getElementById("ico7").className =""; document.getElementById("ico8").className =""''><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/vi.png"/></label> </li> <li class="tab7"> <label id="ico7" for="tab7" onclick=''document.getElementById("ico7").className = "active"; document.getElementById("ico2").className = ""; document.getElementById("ico1").className = "";  document.getElementById("ico3").className = ""; document.getElementById("ico4").className =""; document.getElementById("ico5").className =""; document.getElementById("ico6").className =""; document.getElementById("ico8").className =""''><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/sc.png"/></label> </li> <li class="tab8"> <label id="ico8" for="tab8" onclick=''document.getElementById("ico8").className = "active"; document.getElementById("ico2").className = ""; document.getElementById("ico1").className = "";  document.getElementById("ico3").className = ""; document.getElementById("ico4").className =""; document.getElementById("ico5").className =""; document.getElementById("ico6").className =""; document.getElementById("ico7").className =""''><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/uf.png"/></label> </li> </ul> </nav> <section> <div class="tab1"> <h2>Multibanco Reference</h2> <br/> <p>When calling the API 2.0 in single, our system returns an <b><i>entity</i></b> and <b><i>reference</i></b> in the response JSON. When the payment is made by the customer, our system sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Single <b><i>ID</i></b>. Upon receipt, your system should call the <a href="/docs#tag/Single-Payment%2Fpaths%2F~1single~1%7Bid%7D%2Fget">Single Details</a> endpoint with the Single <b><i>ID</i></b> reported as successful in order to confirm it.</p> <br/> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/mb_single.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/mb_single.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab2"> <h2>MBWay</h2> <br/> <p>Upon successfully calling API 2.0 on a Single with type <b><i>sale</i></b>, our system will communicate to the end customer''s <b>MBWAY App</b>. After the event of the customer accepting/declining the payment, our system sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Single <b><i>ID</i></b> and a <b><i>status</i></b> (success or failed). Upon receipt of success, your system should call <a href="/docs#tag/Single-Payment%2Fpaths%2F~1single~1%7Bid%7D%2Fget">Single Details</a> endpoint with the Single <b><i>ID</i></b> reported as successful in order to confirm it.</p> <p>Only for <B>Test Environment</B>, we have these possible cases on phone:</p> &nbsp;&nbsp;911234567 - Authorized for all operations<br/> &nbsp;&nbsp;917654321 - Failed for all operations<br/> &nbsp;&nbsp;913456789 - Declined for all operations<br/> &nbsp;&nbsp;919876543 - Pending for all operations<br/> <br/> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/mbway_single.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/mbway_single.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab3"> <h2>Visa & Mastercard</h2> <br/> <p>By successfully calling the API 2.0 in a Single with type <b><i>sale</i></b>, our system returns a <b><i>URL</i></b> in the response JSON for the client to be forwarded to our credit card gateway. The end customer must enter the card data. Our system validates the card in the <b>VISA / MASTERCARD</b> and sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Single <b><i>ID</i></b> and a <b><i>status</i></b> (success or failed). Upon receipt of a success, your system should call the <a href="/docs#tag/Single-Payment%2Fpaths%2F~1single~1%7Bid%7D%2Fget">Single Details</a> endpoint with the Single <b><i>ID</i></b> reported as successful in order to confirm it.</p><p>For Visa forward and Visa details configurations follow this <a target="_blank" href="https://github.com/Easypay/documentation/blob/master/apiv2/Visa-Details-and-Fwd-v2.md">link</a></p> <p>Only for <B>Test Environment</B>, we have these possible credit card numbers:</p> &nbsp;&nbsp;0000000000000000 - Authorized for all operations<br/> &nbsp;&nbsp;2222222222222222 - Proceed with 3DS authentication<br/> &nbsp;&nbsp;1111111111111111 - Failed for all operations<br/> &nbsp;&nbsp;1234123412341234 - Declined for all operations<br/> <br/> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/visa_single.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/visa_single.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab4"> <h2>SEPA Direct Debit</h2> <br/> <p>By successfully calling the API 2.0 in a Single with type <b><i>sale</i></b>, our system returns a <b><i>URL</i></b> in the response JSON for the client to be forwarded to our credit card gateway. The end customer must enter the card data. Our system validates the card in the <b>VISA / MASTERCARD</b> and sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Single <b><i>ID</i></b> and a <b><i>status</i></b> (success or failed). Upon receipt of a success, your system should call the <a href="/docs#tag/Single-Payment%2Fpaths%2F~1single~1%7Bid%7D%2Fget">Single Details</a> endpoint with the Single <b><i>ID</i></b> reported as successful in order to confirm it.</p> <p>Only for <B>Test Environment</B>, all valid iban will return success but this one: PT50000201231234567890154</p> <br/> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/dd_single.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/dd_single.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab5"> <h2>Boleto</h2> <br/> <p>By successfully calling the API 2.0 in a Single with type <b><i>sale</i></b>, our system returns a <b><i>URL</i></b> in the response JSON for the client to be forwarded to our credit card gateway. The end customer must enter the card data. Our system validates the card in the <b>VISA / MASTERCARD</b> and sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Single <b><i>ID</i></b> and a <b><i>status</i></b> (success or failed). Upon receipt of a success, your system should call the <a href="/docs#tag/Single-Payment%2Fpaths%2F~1single~1%7Bid%7D%2Fget">Single Details</a> endpoint with the Single <b><i>ID</i></b> reported as successful in order to confirm it.</p> <br/> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/bb_single.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/bb_single.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab6"> <h2>Virtual IBAN</h2> <br/> <p>When calling the API 2.0 in single, our system returns an <b><i>IBAN</i></b> in the response JSON. When the payment is made by the customer, our system sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Single <b><i>ID</i></b>. Upon receipt, your system should call the <a href="/docs#tag/Single-Payment%2Fpaths%2F~1single~1%7Bid%7D%2Fget">Single Details</a> endpoint with the Single <b><i>ID</i></b> reported as successful in order to confirm it.</p> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/iban_single.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/iban_single.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab7"> <h2>Santander Consumer</h2> <br/> <p>By successfully calling the API 2.0 in a Single, our system returns a <b><i>URL</i></b> in the response JSON for the client to be forwarded to. The end customer must fullfill the journey in the Santander Consumer page. After the journey is completed with success, our system sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Single <b><i>ID</i></b>. Upon receipt, your system should call the <a href="/docs#tag/Single-Payment%2Fpaths%2F~1single~1%7Bid%7D%2Fget">Single Details</a> endpoint with the Single <b><i>ID</i></b> reported as successful in order to confirm it.</p> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/santander_single.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/santander_single.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab8"> <h2>Universo Flex</h2> <br/> <p>By successfully calling the API 2.0 in a Single with type <b><i>sale</i></b>, our system returns a <b><i>URL</i></b> in the response JSON for the client to be forwarded to. The end customer must fullfill the journey in the Universo Flex page. After the journey is completed with success or failure, our system sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Single <b><i>ID</i></b>. Upon receipt, your system should call the <a href="/docs#tag/Single-Payment%2Fpaths%2F~1single~1%7Bid%7D%2Fget">Single Details</a> endpoint with the Single <b><i>ID</i></b> reported as successful in order to confirm it.</p><p>For Visa forward and Visa details configurations follow this <a target="_blank" href="https://github.com/Easypay/documentation/blob/master/apiv2/Visa-Details-and-Fwd-v2.md">link</a></p> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/universo_single.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/single/universo_single.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> </section> </div> <style> .pc-tab section div{ display: none; } .pc-tab input{ display: none; } #tab1:checked ~ section .tab1, #tab2:checked ~ section .tab2, #tab3:checked ~ section .tab3, #tab4:checked ~ section .tab4, #tab5:checked ~ section .tab5, #tab6:checked ~ section .tab6, #tab7:checked ~ section .tab7, #tab8:checked ~ section .tab8 { display: block; } #tab1:checked ~ nav .tab1, #tab2:checked ~ nav .tab2, #tab3:checked ~ nav .tab3, #tab4:checked ~ nav .tab4, #tab5:checked ~ nav .tab5, #tab6:checked ~ nav .tab6, #tab7:checked ~ nav .tab7, #tab8:checked ~ nav .tab8 { color: red; } .pc-tab { width: 100%; max-width: 700px; margin: 0 auto; } .pc-tab ul { list-style: none; margin: 0; padding: 0 !important; } .pc-tab ul li label { float: left; padding: 5px 25px; border: 1px solid #ddd; cursor: pointer; background: #eeeeee; color: #444; position: relative; top: 1px; } } .pc-tab ul li label:hover { background: #dddddd; } .pc-tab ul li label:active { background: #ffffff; } .pc-tab ul li label.active { background: #ffffff; border-bottom: 1px solid #ffffff; } .pc-tab ul li label:focus { background: #ffffff; } .pc-tab ul li:not(:last-child) label { border-right-width: 0; } .pc-tab section { clear: both; } .pc-tab section div { padding: 20px; width: 100%; border: 1px solid #ddd; background: #fff; line-height: 1.5em; letter-spacing: 0.3px; color: #444; } .pc-tab section div h2 { margin: 0; letter-spacing: 1px; color: #34495e; } #tab1:checked ~ nav .tab1 label, #tab2:checked ~ nav .tab2 label, #tab3:checked ~ nav .tab3 label, #tab4:checked ~ nav .tab4 label, #tab5:checked ~ nav .tab5 label, #tab6:checked ~ nav .tab6 label, #tab7:checked ~ nav .tab7 label, #tab8:checked ~ nav .tab8 label { background: white; color: #111; position: relative; } #tab1:checked ~ nav .tab1 label:after, #tab2:checked ~ nav .tab2 label:after, #tab3:checked ~ nav .tab3 label:after, #tab4:checked ~ nav .tab4 label:after, #tab5:checked ~ nav .tab5 label:after, #tab6:checked ~ nav .tab6 label:after, #tab7:checked ~ nav .tab7 label:after, #tab8:checked ~ nav .tab8 label:after { content: ""; display: block; position: absolute; height: 2px; width: 100%; background: #ffffff; left: 0; bottom: -1px; } .hide{ display: none; } .myblue{ color: #0D71F9; } .mygreen{ color: #39B54A; } .myred{ color: #D4145A; } .mypink{ color: #EF2AC1; } @media only screen and (max-width: 600px) { .hide_mobile { display: none; } } </style>'
  - name: Frequent Payment
    description: |-
      Payments used on frequent services with amounts and periodicity changes <br/> <div id="freq"> <div class="pc-tab"> <input checked="checked" id="tab1a" type="radio" name="pcta" /> <input id="tab2a" type="radio" name="pcta" /> <input id="tab3a" type="radio" name="pcta" /> <input id="tab4a" type="radio" name="pcta" /> <nav> <ul> <li class="tab1a"> <label id="ico1a" for="tab1a" class="active" onclick='document.getElementById("ico1a").className = "active"; document.getElementById("ico2a").className = ""; document.getElementById("ico3a").className = ""; document.getElementById("ico4a").className = ""'><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/mb.png"/></label> </li> <li class="tab2a"> <label id="ico2a" for="tab2a" onclick='document.getElementById("ico2a").className = "active"; document.getElementById("ico1a").className = ""; document.getElementById("ico3a").className = ""; document.getElementById("ico4a").className = ""'><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/mbway.png"/></label> </li> <li class="tab3a"> <label id="ico3a" for="tab3a" onclick='document.getElementById("ico3a").className = "active"; document.getElementById("ico2a").className = ""; document.getElementById("ico1a").className = ""; document.getElementById("ico4a").className = ""'><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/visa.png"/></label> </li> <li class="tab4a"> <label id="ico4a" for="tab4a" onclick='document.getElementById("ico4a").className = "active"; document.getElementById("ico2a").className = ""; document.getElementById("ico1a").className = ""; document.getElementById("ico3a").className = ""'><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/icons/dd.png"/></label> </li> </ul> </nav> <section> <div class="tab1a"> <h2>Multibanco Reference</h2> <br/> <p>After one Frequent MB request our system will return an <b><i>entity</i></b> and a <b><i>reference</i></b> in the JSON response. The customer can always pay between the min and max values several times before the expiration date or when the method  <a href="/docs#tag/Frequent-Payment%2Fpaths%2F~1frequent~1%7Bid%7D%2Fdelete">Deletes Frequent</a> is called with success. If the parameter <b><i>unlimited_payments</i></b> is active transactions will be unlimited, <b><i>entity</i></b> and <b><i>reference</i></b> is reseted on our provider 3 times a day, otherwise the total value of payments canât exceed the max defined. For each payment made with this entity and reference, our system sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Frequent <b><i>ID</i></b>.</p> <br/> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/freq/mb_freq.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/freq/mb_freq.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab2a"> <h2>MBWay</h2> <br/> <p>After successfully calling the API 2.0 on a Frequent MBW you can capture funds through the Frequent <b><i>ID</i></b> on a Capture call, our system will communicate to the end customer's <b>MBWAY App</b>. If the final customer accepts / rejects payment, the system sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Capture <b><i>ID</i></b> and a <b><i>status</i></b> (success or failed). Upon successful receipt, the system should call the <a href="/docs#tag/Frequent-Payment%2Fpaths%2F~1frequent~1%7Bid%7D%2Fget">Frequent Details</a> endpoint with the Frequent <b><i>ID</i></b> reported as successful in order to confirm it.</p> <p>Only for <B>Test Environment</B>, we have these possible cases on phone:</p> &nbsp;&nbsp;911234567 - Authorized for all operations<br/> &nbsp;&nbsp;917654321 - Declined for all operations<br/> &nbsp;&nbsp;919876543 - Pending for all operations<br/> <br/> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/freq/mbway_freq.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/freq/mbway_freq.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab3a"> <h2>Visa & Mastercard</h2> <br/> <p>When calling the API 2.0 successfully on a Frequent CC, the system returns a <b><i>URL</i></b> in JSON for the client to be forwarded to our credit card gateway. The end customer must enter the card data. The system validates the card in the <b>VISA / MASTERCARD</b> and notifies <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Frequent <b><i>ID</i></b> and a status (success or failed). Upon successful receipt, the system should call the <a href="/docs#tag/Frequent-Payment%2Fpaths%2F~1frequent~1%7Bid%7D%2Fget">Frequent Details</a> endpoint with the Frequent <b><i>ID</i></b> reported as successful. From a successful communication, you can capture funds using the Frequent <b><i>ID</i></b> in a Capture call. The system will capture the funds from the card and sends a <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Capture <b><i>ID</i></b> and a status (success or failed). Upon successful receipt, the system should call the <a href="/docs#tag/Frequent-Payment%2Fpaths%2F~1frequent~1%7Bid%7D%2Fget">Frequent Details</a> endpoint with the Frequent <b><i>ID</i></b> reported as successful.</p><p>For Visa forward and Visa details configurations follow this <a target="_blank" href="https://github.com/Easypay/documentation/blob/master/apiv2/Visa-Details-and-Fwd-v2.md">link</a>.</p> <br/> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/freq/visa_freq.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/freq/visa_freq.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> <div class="tab4a"> <h2>SEPA Direct Debit</h2> <br/> <p>When calling API 2.0 successfully on a Frequent DD, the system returns in JSON including the  SEPA Direct Debit Mandate <b><i>ID</i></b> and an additional <b><i>entity</i></b>/<b><i>reference</i></b> for additional payments. From now on funds can be captured through the Frequent <b><i>ID</i></b> using the <a href="/docs#tag/Payment-Generic-Operations%2Fpaths%2F~1capture~1%7Bid%7D%2Fpost">Capture</a> endpoint, these funds can take up to 48 business hours to obtain a SEPA direct debit response. When responding, the system notifies with  <a href="/docs#tag/Notification%2Fpaths%2F~1your-generic-notification-endpoint%2Fpost">Generic Notification</a> with the Capture <b><i>ID</i></b> and a <b><i>status</i></b> (success or failed). Upon successful receipt, the system should call the <a href="/docs#tag/Frequent-Payment%2Fpaths%2F~1frequent~1%7Bid%7D%2Fget">Frequent Details</a> endpoint with the Frequent <b><i>ID</i></b> reported as successful.</p> <br/> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/freq/dd_freq.png" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/img_thumb.png"/></a> <a href="https://easypay-cdn-delivery.s3.amazonaws.com/docs/freq/dd_freq.pdf" target="_blank"><img src="https://easypay-cdn-delivery.s3.amazonaws.com/docs/thumbnails/pdf_thumb.png"/></a> </div> </section> </div> </div> <style> #freq .pc-tab section div{ display: none; } #freq .pc-tab input{ display: none; } #freq #tab1a:checked ~ section .tab1a, #freq #tab2a:checked ~ section .tab2a, #freq #tab4a:checked ~ section .tab4a, #freq #tab3a:checked ~ section .tab3a { display: block; } #freq #tab1a:checked ~ nav .tab1a, #freq #tab2a:checked ~ nav .tab2a, #freq #tab4a:checked ~ nav .tab4a, #freq #tab3a:checked ~ nav .tab3a { color: red; } #freq .pc-tab { width: 100%; max-width: 700px; margin: 0 auto; } #freq .pc-tab ul { list-style: none; margin: 0; padding: 0 !important; } #freq .pc-tab ul li label { float: left; padding: 5px 25px; border: 1px solid #ddd; cursor: pointer;
      background: #eeeeee; color: #444; position: relative; top: 1px; } #freq .pc-tab ul li label:hover { background: #dddddd; } #freq .pc-tab ul li label:active { background: #ffffff; } #freq .pc-tab ul li label.active { background: #ffffff; border-bottom: 1px solid #ffffff; } #freq .pc-tab ul li label:focus { background: #ffffff; }
      #freq .pc-tab ul li:not(:last-child) label { border-right-width: 0; } #freq .pc-tab section { clear: both; } #freq .pc-tab section div { padding: 20px; width: 100%; border: 1px solid #ddd; background: #fff; line-height: 1.5em; letter-spacing: 0.3px; color: #444; } #freq .pc-tab section div h2 { margin: 0; letter-spacing: 1px; color: #34495e; } #freq #tab1a:checked ~ nav .tab1a label, #freq #tab2a:checked ~ nav .tab2a label, #freq #tab4a:checked ~ nav .tab4a label, #freq #tab3a:checked ~ nav .tab3a label { background: white; color: #111; position: relative; } #freq #tab1a:checked ~ nav .tab1a label:after, #freq #tab2a:checked ~ nav .tab2a label:after, #freq #tab4a:checked ~ nav .tab4a label:after, #freq #tab3a:checked ~ nav .tab3a label:after { content: ""; display: block; position: absolute; height: 2px; width: 100%; background: #ffffff; left: 0; bottom: -1px; } </style>
  - name: Subscription Payment
  - name: Payment Generic Operations
    description: 'These operations can be used on all our payment types: single, frequent and subscription'
  - name: Notification
    description: 'On <a href=''https://backoffice.easypay.pt'' class=''item''>Easypay Backoffice</a> please configure your url''s for each type of notification on menu: <i><b>Web Services->Configuration API 2.0->Notifications</b></i> and check the your notification history log on menu: <i><b>Web Services->Notifications API 2.0</b></i>. <br>There is also a configuration to include a security header (x-easypay-code) on all notifications. <br> Our system default notification payloads can be customized to any format if needed.'
  - name: Reports
  - name: Out Payment
    description: These operations will allow our clients to transfer their funds from Easypay Accounts to a Sepa Bank Account.
  - name: Config
    description: Account URL configuration for notifications and credit card transactions
  - name: Road Map
    description: Our future implementations on Easypay API
  - name: Checkout
paths:
  /single:
    get:
      tags:
        - Single Payment
      summary: Lists single payments
      description: Full report with all the single payments from your Account
      parameters:
        - name: page
          in: query
          description: Page Number
          schema:
            type: number
        - name: records_per_page
          in: query
          description: 'Limit records per page (Max: 100)'
          schema:
            type: number
            default: 20
        - name: type
          in: query
          description: Filter by type
          schema:
            type: string
        - name: expiration_time
          in: query
          description: Filter by expiration time interval (max 30 days)
          schema:
            type: string
        - name: method
          in: query
          description: Filter by method
          schema:
            type: string
        - name: customer
          in: query
          description: Filter by customer key
          schema:
            type: string
        - name: id
          in: query
          description: Filter by id
          schema:
            type: string
        - name: key
          in: query
          description: Filter by single key
          schema:
            type: string
        - name: value
          in: query
          description: Filter by value
          schema:
            type: number
            format: double
        - name: created_at
          in: query
          description: Filter by created datetime interval (max 30 days)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Response-Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment_SingleWithTransactions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      security:
        - accountId: []
          apiKey: []
      operationId: single-get
    post:
      tags:
        - Single Payment
      summary: Create single payment
      parameters: []
      requestBody:
        description: Payment configuration object to generate a payment
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Properties_Has_Type'
                - $ref: '#/components/schemas/Payment_Single_Base'
                - $ref: '#/components/schemas/Payment_Single_Method_Request'
                - $ref: '#/components/schemas/Properties_Has_SddMandate'
                - $ref: '#/components/schemas/Payment_Capture'
            examples:
              Multibanco:
                value:
                  expiration_time: '2017-12-12 16:05'
                  currency: EUR
                  customer:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
                  key: Example Key
                  value: 17.5
                  type: sale
                  method: mb
                  capture:
                    descriptive: string
                    transaction_key: string
                    capture_date: string
                    account:
                      id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    splits:
                      - split_key: string
                        split_descriptive: Descriptive Example
                        value: 1
                        account:
                          id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                        margin_value: 0.1
                        margin_account:
                          id: 22ea3cc9-424b-489a-91b7-8955f643dc93
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response_MinimalOutput_Single'
                  - $ref: '#/components/schemas/StatusDetails'
                  - $ref: '#/components/schemas/Response-Capture-Minimal'
            application/xml:
              example: |-
                <response>
                   <status>ok</status>
                   <message>
                      <string>Your request was successfully created</string>
                   </message>
                   <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                   <method>
                      <type>mb</type>
                      <status>pending</status>
                      <entity>10611</entity>
                      <reference>987654321</reference>
                      <url>https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN</url>
                      <last_four>1234</last_four>
                      <card_type>VISA</card_type>
                      <expiration_date>01/22</expiration_date>
                      <alias>626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B</alias>
                      <sdd_mandate>
                         <id>12345678901</id>
                         <billing_entity>PT16103627</billing_entity>
                         <iban>PT50002700000001234567833</iban>
                         <key>Key Example</key>
                         <name>Name Example</name>
                         <email>customer@example.com</email>
                         <phone>911234567</phone>
                         <account_holder>Account Name Example</account_holder>
                         <country_code>PT</country_code>
                         <max_num_debits>12</max_num_debits>
                      </sdd_mandate>
                   </method>
                   <customer>
                      <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                   </customer>
                </response>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      operationId: single-post
      description: |-
        Single payments are one-time transactions that will let your customers pay an amount of money to you. 

        Examples may include a purchase of a good or service, or a donation. 

        Every payment method supported by easypay allows single payments.
  '/single/{id}':
    get:
      tags:
        - Single Payment
      summary: Shows single payment details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment_Single'
              examples:
                example-1:
                  value:
                    id: 4c67e74b-a256-4e0a-965d-97bf5d01bd50
                    expiration_time: '2017-12-12 16:05'
                    currency: EUR
                    customer:
                      id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                      name: Customer Example
                      email: customer@example.com
                      phone: '911234567'
                      phone_indicative: 351
                      fiscal_number: PT123456789
                      key: Key Example
                      language: PT
                    key: Example Key
                    value: 17.5
                    method:
                      type: mb
                      sdd_mandate:
                        id: '12345678901'
                        iban: PT50002700000001234567833
                        key: Key Example
                        name: Name Example
                        email: customer@example.com
                        phone: '911234567'
                        account_holder: Acount Name Example
                        country_code: PT
                        max_num_debits: '12'
                        reference_adc: '987654321123'
                    payment_status: paid
                    paid_at: '2017-12-12 16:05:02'
                    created_at: '2017-12-12 16:05:02'
            application/xml:
              example: |-
                <payment>
                   <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                   <type>sale</type>
                   <key>Example Key</key>
                   <expiration_time>2019-12-12T16:05:00Z</expiration_time>
                   <customer>
                      <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                      <name>Customer Example</name>
                      <email>customer@example.com</email>
                      <phone>911234567</phone>
                      <phone_indicative>+351</phone_indicative>
                      <fiscal_number>PT123456789</fiscal_number>
                      <key>Key Example</key>
                      <language>PT</language>
                   </customer>
                   <method>
                      <type>MB</type>
                      <status>pending</status>
                      <entity>10611</entity>
                      <reference>987654321</reference>
                      <url>https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN</url>
                      <last_four>1234</last_four>
                      <card_type>VISA</card_type>
                      <expiration_date>01/22</expiration_date>
                      <alias>626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B</alias>
                      <sdd_mandate>
                         <id>12345678901</id>
                         <billing_entity>PT16103627</billing_entity>
                         <iban>PT50002700000001234567833</iban>
                         <key>Key Example</key>
                         <name>Name Example</name>
                         <email>customer@example.com</email>
                         <phone>911234567</phone>
                         <account_holder>Account Name Example</account_holder>
                         <country_code>PT</country_code>
                         <max_num_debits>12</max_num_debits>
                      </sdd_mandate>
                   </method>
                   <currency>EUR</currency>
                   <value>2</value>
                </payment>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      operationId: single-id-get
      description: ''
    delete:
      tags:
        - Single Payment
      summary: Deletes single payment
      description: 'This delete operation is not applicable for MB and BB method.<br>All CC and MBW authorisations will be deleted, releasing the funds.<br>All MBW operations waiting for user interaction will be cancelled.<br>Before 6pm all Sepa Direct Debits waiting for file processing will be cancelled.'
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      operationId: single-delete
    patch:
      tags:
        - Single Payment
      summary: Updates single payment details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Single Payment object to edit existing one
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment_Single_Patchable'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Payment_Single'
                  - $ref: '#/components/schemas/StatusDetails'
              examples:
                Response:
                  value:
                    id: 4c67e74b-a256-4e0a-965d-97bf5d01bd50
                    expiration_time: '2017-12-12 16:05'
                    currency: EUR
                    customer:
                      id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                      name: Customer Example
                      email: customer@example.com
                      phone: '911234567'
                      phone_indicative: 351
                      fiscal_number: PT123456789
                      key: Key Example
                      language: PT
                    key: Example Key
                    value: 17.5
                    method:
                      sdd_mandate:
                        id: '12345678901'
                        iban: PT50002700000001234567833
                        key: Key Example
                        name: Name Example
                        email: customer@example.com
                        phone: '911234567'
                        account_holder: Acount Name Example
                        country_code: PT
                        max_num_debits: '12'
                        reference_adc: '987654321123'
                    payment_status: paid
                    paid_at: '2017-12-12 16:05:02'
                    created_at: '2017-12-12 16:05:02'
                    status: ok
                    message:
                      - Your request was successfully created
            application/xml:
              example: |-
                <payment>
                   <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                   <type>sale</type>
                   <key>Example Key</key>
                   <expiration_time>2019-12-12T16:05:00Z</expiration_time>
                   <customer>
                      <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                      <name>Customer Example</name>
                      <email>customer@example.com</email>
                      <phone>911234567</phone>
                      <phone_indicative>+351</phone_indicative>
                      <fiscal_number>PT123456789</fiscal_number>
                      <key>Key Example</key>
                      <language>PT</language>
                   </customer>
                   <method>
                      <type>MB</type>
                      <status>pending</status>
                      <entity>10611</entity>
                      <reference>987654321</reference>
                      <url>https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN</url>
                      <last_four>1234</last_four>
                      <card_type>VISA</card_type>
                      <expiration_date>01/22</expiration_date>
                      <alias>626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B</alias>
                      <sdd_mandate>
                         <id>12345678901</id>
                         <billing_entity>PT16103627</billing_entity>
                         <iban>PT50002700000001234567833</iban>
                         <key>Key Example</key>
                         <name>Name Example</name>
                         <email>customer@example.com</email>
                         <phone>911234567</phone>
                         <account_holder>Account Name Example</account_holder>
                         <country_code>PT</country_code>
                         <max_num_debits>12</max_num_debits>
                      </sdd_mandate>
                   </method>
                   <currency>EUR</currency>
                   <value>2</value>
                </payment>
        '304':
          description: Not Modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-codegen-request-body-name: body
      operationId: single-patch
  /frequent:
    get:
      tags:
        - Frequent Payment
      summary: Lists frequent payments
      description: Full report with all the frequent payments from your Account Id
      parameters:
        - name: page
          in: query
          description: Page Number
          schema:
            type: number
        - name: records_per_page
          in: query
          description: 'Limit records per page (Max: 100)'
          schema:
            type: number
            default: 20
        - name: expiration_time
          in: query
          description: Filter by expiration time interval (max 30 days)
          schema:
            type: string
        - name: method
          in: query
          description: Filter by method
          schema:
            type: string
        - name: customer
          in: query
          description: Filter by customer key
          schema:
            type: string
        - name: id
          in: query
          description: Filter by id
          schema:
            type: string
        - name: key
          in: query
          description: Filter by frequent key
          schema:
            type: string
        - name: created_at
          in: query
          description: Filter by created datetime interval (max 30 days)
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Response-Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment_Frequent'
              examples:
                Response:
                  value:
                    meta:
                      page:
                        current: 1
                        total: 2335
                      records:
                        total: 4669
                        per_page: 2
                      links:
                        first: '?page=1'
                        prev: ''
                        next: '?page=2'
                        last: '?page=2335'
                    data:
                      - id: ab2f2eb6-3655-4951-98ae-36367d5f3727
                        key: Default Key
                        expiration_time: '2022-12-12T16:05:00Z'
                        customer:
                          id: 06300032-5cbd-4393-b73d-9f4c9875270a
                          name: '***'
                          email: ema***@example.com
                          phone: '***'
                          fiscal_number: '***'
                          key: Customer key
                          language: PT
                        method:
                          type: CC
                          status: waiting
                          url: 'https://cc.test.easypay.pt/start/ab2f2eb6-3655-4951-98ae-36367d5f3727'
                        currency: EUR
                        max_value: 20.55
                        min_value: 2.32
                        unlimited_payments: false
                        created_at: '2022-11-23 12:03:29'
                      - id: f15cee45-d5a5-469d-8cb2-79a6dcba977f
                        key: Default Key
                        expiration_time: '2022-12-12T16:05:00Z'
                        customer:
                          id: 48307582-91bc-4e15-a9f6-84633fbdd2c7
                          name: '***'
                          email: ema***@example.com
                          phone: '***'
                          fiscal_number: '***'
                          key: Customer key
                          language: PT
                        method:
                          type: DD
                          status: active
                          sdd_mandate:
                            id: '50124502381'
                            billing_entity: PT16103627
                            iban: PT500027**XX7833
                            key: Sdd Mandate key
                            name: Fre*** DD***
                            email: cus***@example.com
                            phone: 911***567
                            account_holder: Acc*** Exa***
                            country_code: PT
                            max_num_debits: '0'
                        currency: EUR
                        max_value: 20.55
                        min_value: 2.32
                        unlimited_payments: false
                        created_at: '2022-11-23 11:56:35'
            application/xml:
              example: |-
                <report>
                   <meta>
                      <page>
                         <current>1</current>
                         <total>40</total>
                      </page>
                      <records>
                         <total>40</total>
                         <per_page>1</per_page>
                      </records>
                      <links>
                         <first>?page=1</first>
                         <prev></prev>
                         <next>?page=2</next>
                         <last>?page=40</last>
                      </links>
                   </meta>
                   <data>
                      <payment>
                         <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                         <key>Key Example</key>
                         <expiration_time>2017-12-12 16:05</expiration_time>
                         <customer>
                            <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                            <name>Customer Example</name>
                            <email>customer@example.com</email>
                            <phone>911234567</phone>
                            <phone_indicative>+351</phone_indicative>
                            <fiscal_number>PT123456789</fiscal_number>
                            <key>Customer Key Example</key>
                            <language>PT</language>
                         </customer>
                         <method>
                            <type>MB</type>
                            <status>active</status>
                            <entity>10611</entity>
                            <reference>987654321</reference>
                            <url>https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN</url>
                            <last_four>1234</last_four>
                            <card_type>VISA</card_type>
                            <expiration_date>01/22</expiration_date>
                            <alias>626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B</alias>
                            <sdd_mandate>
                               <id>12345678901</id>
                               <billing_entity>PT16103627</billing_entity>
                               <iban>PT50002700000001234567833</iban>
                               <key>Key Example</key>
                               <name>Name Example</name>
                               <email>customer@example.com</email>
                               <phone>911234567</phone>
                               <account_holder>Account Name Example</account_holder>
                               <country_code>PT</country_code>
                               <max_num_debits>12</max_num_debits>
                            </sdd_mandate>
                         </method>
                         <currency>EUR</currency>
                         <max_value>0</max_value>
                         <min_value>10</min_value>
                         <authorisations></authorisations>
                         <transactions></transactions>
                         <unlimited_payments>true</unlimited_payments>
                      </payment>
                   </data>
                </report>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      operationId: frequent-get
    post:
      tags:
        - Frequent Payment
      summary: Create frequent payment
      parameters: []
      requestBody:
        description: Payment configuration object to generate a payment
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  expiration_time: '2017-12-12 16:05'
                  currency: EUR
                  customer:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
                  key: Example Key
                  max_value: 20
                  min_value: 2
                  unlimited_payments: false
                  method: mb
                  sdd_mandate:
                    id: '12345678901'
                    iban: PT50002700000001234567833
                    key: Key Example
                    name: Name Example
                    email: customer@example.com
                    phone: '911234567'
                    account_holder: Acount Name Example
                    country_code: PT
                    max_num_debits: '12'
              properties:
                expiration_time:
                  type: string
                  format: 'Y-m-d H:i'
                  example: '2017-12-12 16:05'
                currency:
                  type: string
                  enum:
                    - EUR
                    - BRL
                  default: EUR
                  example: EUR
                customer:
                  $ref: '#/components/schemas/Customer'
                key:
                  type: string
                  description: The merchant's key for identifying the payment.
                  maxLength: 50
                  example: Key Example
                max_value:
                  type: number
                  format: double
                  minimum: 0.01
                  example: 25.5
                min_value:
                  type: number
                  format: double
                  minimum: 0.01
                  example: 10.5
                unlimited_payments:
                  type: boolean
                  default: true
                  description: 'Transactions will be unlimited, max or min value will be refreshed on each payment.'
                method:
                  $ref: '#/components/schemas/Payment_Frequent_Method_Available'
                sdd_mandate:
                  $ref: '#/components/schemas/SddMandate'
            examples:
              Create a Frequent Payment DD:
                value:
                  expiration_time: '2017-12-12 16:05'
                  currency: EUR
                  customer:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: 351
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
                  key: Key Example
                  max_value: '25,50'
                  min_value: '10,00'
                  unlimited_payments: true
                  method: dd
                  sdd_mandate:
                    id: '12345678901'
                    iban: PT50002700000001234567833
                    key: Key Example
                    name: Name Example
                    email: customer@example.com
                    phone: '911234567'
                    account_holder: Acount Name Example
                    country_code: PT
                    max_num_debits: '12'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 86401037-1c8d-4cf3-9172-d0a29b17b9fd
                    method:
                      type: CC
                      status: waiting
                      entity: '59126'
                      reference: '810000618'
                      url: 'https://eo5m73g8idr0idl.m.pipedream.net'
                    customer:
                      id: e7bb115b-3e59-441a-bdb4-60b0f066c2d0
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: array
                    items:
                      type: string
                      example: Your request was successfully created
                  id:
                    type: string
                    format: uuid
                  method:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - MB
                          - CC
                          - DD
                          - MBW
                          - VI
                      status:
                        type: string
                        enum:
                          - waiting
                          - pending
                          - active
                          - deleted
                      entity:
                        type: string
                        example: '59126'
                      reference:
                        type: string
                        example: '810000618'
                      url:
                        type: string
                        description: Only returns if the payment is a Credid Card.
                        example: 'https://cc.test.easypay.pt/start/980d4826-8574-4782-8450-18db150b7c26'
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
              examples:
                Response from CC method:
                  value:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: cd90455e-4ab3-42cf-a91c-cfc6e3afa65a
                    method:
                      type: cc
                      status: waiting
                      url: 'https://cc.test.easypay.pt/start/cd90455e-4ab3-42cf-a91c-cfc6e3afa65a'
                    customer:
                      id: 68d07e52-3e04-493f-aaeb-bffe7ddb81ee
            application/xml:
              example: |-
                <response>
                   <status>ok</status>
                   <message>
                      <string>Your request was successfully created</string>
                   </message>
                   <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                   <method>
                      <type>mb</type>
                      <status>waiting</status>
                      <entity>10611</entity>
                      <reference>987654321</reference>
                      <url>https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN</url>
                      <last_four>1234</last_four>
                      <card_type>VISA</card_type>
                      <expiration_date>01/22</expiration_date>
                      <alias>626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B</alias>
                      <sdd_mandate>
                         <id>12345678901</id>
                         <billing_entity>PT16103627</billing_entity>
                         <iban>PT50002700000001234567833</iban>
                         <key>Key Example</key>
                         <name>Name Example</name>
                         <email>customer@example.com</email>
                         <phone>911234567</phone>
                         <account_holder>Account Name Example</account_holder>
                         <country_code>PT</country_code>
                         <max_num_debits>12</max_num_debits>
                      </sdd_mandate>
                   </method>
                   <customer>
                      <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                   </customer>
                </response>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      description: |
        Frequent payments are repeatable transactions of varying sums without the client having to enter their payment details again.

        It is possible to limit the transferred sums by choosing minimum or maximum values, either to the total sum of the transactions or each individual transaction.

        Supported methods for frequent payments are: <i style="color:red">Credit Card, MB WAY, Multibanco, Direct Debit</i> and <i style="color:red">Virtual IBAN</i>
  '/frequent/{id}':
    get:
      tags:
        - Frequent Payment
      summary: Shows frequent payment details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    id: f15cee45-d5a5-469d-8cb2-79a6dcba977f
                    key: Default Key
                    expiration_time: '2022-12-12T16:05:00Z'
                    customer:
                      id: 48307582-91bc-4e15-a9f6-84633fbdd2c7
                      email: email@example.com
                      key: Customer key
                      language: PT
                    method:
                      type: DD
                      status: active
                      sdd_mandate:
                        id: '50124502381'
                        billing_entity: PT16103627
                        iban: PT50002700XXXXXXXXXXX7833
                        key: Sdd Mandate key
                        name: Frequent Payment DD
                        email: customer@example.com
                        phone: '911234567'
                        account_holder: Account Name Example
                        country_code: PT
                        max_num_debits: '0'
                    currency: EUR
                    max_value: 20.55
                    min_value: 2.32
                    unlimited_payments: false
                    created_at: '2022-11-23 11:56:35'
                properties:
                  id:
                    type: string
                    format: uuid
                  key:
                    type: string
                  expiration_time:
                    type: string
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      key:
                        type: string
                      language:
                        type: string
                  method:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - MB
                          - CC
                          - DD
                          - MBW
                          - VI
                      status:
                        type: string
                        enum:
                          - waiting
                          - pending
                          - active
                          - deleted
                      url:
                        type: string
                        example: 'https://cc.test.easypay.pt/start/ab2f2eb6-3655-4951-98ae-36367d5f3727'
                        description: Only returns if the payment is a Credit Card.
                      last_four:
                        type: string
                        description: |
                          Only returns if the payment is a Credit Card.</br>Last 4 digits of the submitted Credit Card.
                      card_type:
                        type: string
                        description: Only returns if the payment is a Credit Card.
                        enum:
                          - MasterCard
                          - VISA
                      expiration_date:
                        type: string
                        description: Only returns if the payment is a Credit Card.
                      iban:
                        type: string
                        description: Virtual IBAN
                      alias:
                        type: string
                        description: MB WAY Alias (only for mobile implementation using MBWAY SDK).
                      sdd_mandate:
                        type: object
                        properties:
                          id:
                            type: string
                          billing_entity:
                            type: string
                          iban:
                            type: string
                          key:
                            type: string
                          country_code:
                            type: string
                          name:
                            type: string
                          email:
                            type: string
                          phone:
                            type: string
                          account_holder:
                            type: string
                          max_num_debits:
                            type: string
                  currency:
                    type: string
                  max_value:
                    type: number
                  min_value:
                    type: number
                  unlimited_payments:
                    type: boolean
                  created_at:
                    type: string
                    description: Date when payment was created.
                    example: '2017-12-12 16:05:02'
              examples:
                Response:
                  value:
                    id: ac1913a3-fd78-4822-8394-0a14f4169247
                    key: Default Key
                    expiration_time: '2022-12-12T16:05:00Z'
                    customer:
                      id: fdc4bc82-8e45-4597-b46d-51d3285cf935
                      name: Robert Stuart
                      email: email@example.com
                      phone: '911234567'
                      key: Customer key
                      language: PT
                    method:
                      type: CC
                      status: active
                      url: 'https://cc.test.easypay.pt/start/ac1913a3-fd78-4822-8394-0a14f4169247'
                      last_four: '0000'
                      card_type: VISA
                      expiration_date: 04/25
                    currency: EUR
                    max_value: 20
                    min_value: 2
                    unlimited_payments: false
                    created_at: '2022-11-23 13:16:58'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment_FrequentWithTransactions'
              example: |-
                <payment>
                   <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                   <key>Example Key</key>
                   <expiration_time>2019-12-12T16:05:00Z</expiration_time>
                   <customer>
                      <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                      <name>Customer Example</name>
                      <email>customer@example.com</email>
                      <phone>911234567</phone>
                      <phone_indicative>+351</phone_indicative>
                      <fiscal_number>PT123456789</fiscal_number>
                      <key>Key Example</key>
                      <language>PT</language>
                   </customer>
                   <method>
                      <type>MB</type>
                      <status>active</status>
                      <entity>10611</entity>
                      <reference>987654321</reference>
                      <url>https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN</url>
                      <last_four>1234</last_four>
                      <card_type>VISA</card_type>
                      <expiration_date>01/22</expiration_date>
                      <alias>626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B</alias>
                      <sdd_mandate>
                         <id>12345678901</id>
                         <billing_entity>PT16103627</billing_entity>
                         <iban>PT50002700000001234567833</iban>
                         <key>Key Example</key>
                         <name>Name Example</name>
                         <email>customer@example.com</email>
                         <phone>911234567</phone>
                         <account_holder>Account Name Example</account_holder>
                         <country_code>PT</country_code>
                         <max_num_debits>12</max_num_debits>
                      </sdd_mandate>
                   </method>
                   <currency>EUR</currency>
                   <max_value>20</max_value>
                   <min_value>2</min_value>
                   <unlimited_payments>false</unlimited_payments>
                   <transactions>
                      <transaction>
                         <id>e71d9cd2-89dc-4662-a160-47def7c3ff82</id>
                         <key>chave capt</key>
                         <date>2019-06-28T16:52:59Z</date>
                         <values>
                            <requested>10.02</requested>
                            <paid>10.02</paid>
                            <fixed_fee>0</fixed_fee>
                            <variable_fee>0</variable_fee>
                            <tax>0</tax>
                            <transfer>10.02</transfer>
                         </values>
                         <transfer_date>2019-06-28T00:00:00Z</transfer_date>
                         <method>mbw</method>
                         <document_number>TEST12300000000</document_number>
                      </transaction>
                   </transactions>
                   <authorisations>
                      <authorisation>
                         <id>71fef07d-e566-4b53-a467-a5181dd804a7</id>
                         <status>success</status>
                         <key>chave capt</key>
                         <value>10.02</value>
                         <transactions></transactions>
                      </authorisation>
                   </authorisations>
                </payment>
            text/csv:
              schema:
                $ref: '#/components/schemas/Payment_FrequentWithTransactions'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
      operationId: frequent-id-get
      description: ''
    delete:
      tags:
        - Frequent Payment
      summary: Deletes frequent payment
      description: '3 times a day (10am, 3pm and 10pm) our system will attempt to close your deleted MB payments.<br>All CC and MBW authorisations will be deleted, releasing the funds.<br>All MBW operations waiting for user interaction will be cancelled.<br>Before 6pm all Sepa Direct Debits waiting for file processing will be cancelled.'
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
    patch:
      tags:
        - Frequent Payment
      summary: Updates frequent payment details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Frequent Payment object to edit existing one
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  status: active
                  expiration_time: '2017-12-12 16:05'
                  currency: EUR
                  customer:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
                  key: Example Key
                  max_value: 20
                  min_value: 2
                  unlimited_payments: false
                  sdd_mandate:
                    id: '12345678901'
                    iban: PT50002700000001234567833
                    key: Key Example
                    name: Name Example
                    email: customer@example.com
                    phone: '911234567'
                    account_holder: Acount Name Example
                    country_code: PT
                    max_num_debits: '12'
              properties:
                status:
                  type: string
                  enum:
                    - active
                    - deleted
                expiration_time:
                  type: string
                  format: 'Y-m-d H:i'
                  example: '2017-12-12 16:05'
                currency:
                  type: string
                  enum:
                    - EUR
                    - BRL
                  default: EUR
                  example: EUR
                customer:
                  $ref: '#/components/schemas/Customer'
                key:
                  type: string
                  description: The merchant's key for identifying the payment.
                  maxLength: 50
                  example: Key Example
                max_value:
                  type: number
                  format: double
                  minimum: 0.01
                  example: '25,50'
                min_value:
                  type: number
                  format: double
                  minimum: 0.01
                  example: '10,00'
                unlimited_payments:
                  type: boolean
                  default: true
                  description: 'Transactions will be unlimited, max or min value will be refreshed on each payment.'
                sdd_mandate:
                  $ref: '#/components/schemas/SddMandate'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 86401037-1c8d-4cf3-9172-d0a29b17b9fd
                    method:
                      type: cc
                      status: waiting
                      url: 'https://cc.test.easypay.pt/start/86401037-1c8d-4cf3-9172-d0a29b17b9fd'
                    customer:
                      id: e7bb115b-3e59-441a-bdb4-60b0f066c2d0
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: array
                    items:
                      type: string
                      example: Your request was successfully created
                  id:
                    type: string
                    format: uuid
                  method:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - MB
                          - CC
                          - DD
                          - MBW
                          - VI
                      status:
                        type: string
                        enum:
                          - waiting
                          - pending
                          - active
                          - deleted
                      url:
                        type: string
                        example: 'https://cc.test.easypay.pt/start/86401037-1c8d-4cf3-9172-d0a29b17b9fd'
                        description: Only returns if the payment is a Credid Card.
                      entity:
                        type: string
                        example: '59126'
                      reference:
                        type: string
                        example: '810000618'
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
              examples:
                Full Response:
                  value:
                    method:
                      type: dd
                      sdd_mandate:
                        id: '12345678901'
                        iban: PT50002700000001234567833
                        key: Key Example
                        name: Name Example
                        email: customer@example.com
                        phone: '911234567'
                        account_holder: Acount Name Example
                        country_code: PT
                        max_num_debits: '12'
                        reference_adc: '987654321123'
                    status: ok
                    message:
                      - Your request was successfully created
                Response from CC Method:
                  value:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 86401037-1c8d-4cf3-9172-d0a29b17b9fd
                    method:
                      type: CC
                      status: waiting
                      entity: '59126'
                      reference: '810000618'
                      url: 'https://cc.test.easypay.pt/start/86401037-1c8d-4cf3-9172-d0a29b17b9fd'
                    customer:
                      id: e7bb115b-3e59-441a-bdb4-60b0f066c2d0
            application/xml:
              example: |-
                <payment>
                   <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                   <key>Example Key</key>
                   <expiration_time>2019-12-12T16:05:00Z</expiration_time>
                   <customer>
                      <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                      <name>Customer Example</name>
                      <email>customer@example.com</email>
                      <phone>911234567</phone>
                      <phone_indicative>+351</phone_indicative>
                      <fiscal_number>PT123456789</fiscal_number>
                      <key>Key Example</key>
                      <language>PT</language>
                   </customer>
                   <method>
                      <type>MB</type>
                      <status>active</status>
                      <entity>10611</entity>
                      <reference>987654321</reference>
                      <url>https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN</url>
                      <last_four>1234</last_four>
                      <card_type>VISA</card_type>
                      <expiration_date>01/22</expiration_date>
                      <alias>626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B</alias>
                      <sdd_mandate>
                         <id>12345678901</id>
                         <billing_entity>PT16103627</billing_entity>
                         <iban>PT50002700000001234567833</iban>
                         <key>Key Example</key>
                         <name>Name Example</name>
                         <email>customer@example.com</email>
                         <phone>911234567</phone>
                         <account_holder>Account Name Example</account_holder>
                         <country_code>PT</country_code>
                         <max_num_debits>12</max_num_debits>
                      </sdd_mandate>
                   </method>
                   <currency>EUR</currency>
                   <max_value>20</max_value>
                   <min_value>2</min_value>
                   <unlimited_payments>false</unlimited_payments>
                </payment>
        '304':
          description: Not Modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
  '/frequent/authorisation/{id}':
    post:
      tags:
        - Frequent Payment
      summary: Request Authorisation
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Payment configuration object to generate a payment
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  mbway_sdk:
                    purchase_token: 626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B
                    initial_timestamp: '2018-01-01 23:59:59'
                    merchant_operation_id: TESTACCOUNT5436
                    payload: '{''purchase_token'':''EDEB342D3588DDDEEE3E070476E72A6B222E3456C1C825D3E89A734005CE81F69986045424984F55B3233CBFD090A8A564071BBB493F34C4849C964'',''initial_timestamp'':''2018-09-20T10:46:08+01:00'',''merchant_operation_id'':''TESTACCOUNT5436'',''payload'':{''amount'':1000,''currencyCode'':''9782''}}'
                  transaction_key: string
                  force_3ds: false
                  descriptive: Descriptive Example
                  value: 17.5
              properties:
                mbway_sdk:
                  $ref: '#/components/schemas/Mbway_sdk'
                transaction_key:
                  type: string
                  description: Your internal key identifying this authorisation.
                  maxLength: 255
                force_3ds:
                  type: boolean
                  default: false
                  description: Whether or not you want to force the 3DS authentication.
                descriptive:
                  type: string
                  description: This will appear in the bank statement/mbway application.
                  maxLength: 255
                  example: Descriptive Example
                value:
                  type: number
                  description: Value will be rounded to 2 decimals.
                  format: double
                  minimum: 0.5
                  example: 10.5
              required:
                - descriptive
                - value
            examples:
              Create an Authorisation:
                value:
                  mbway_sdk:
                    purchase_token: 626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B
                    initial_timestamp: '2018-01-01 23:59:59'
                    merchant_operation_id: TESTACCOUNT5436
                    payload: '{''purchase_token'':''EDEB342D3588DDDEEE3E070476E72A6B222E3456C1C825D3E89A734005CE81F69986045424984F55B3233CBFD090A8A564071BBB493F34C4849C964'',''initial_timestamp'':''2018-09-20T10:46:08+01:00'',''merchant_operation_id'':''TESTACCOUNT5436'',''payload'':{''amount'':1000,''currencyCode'':''9782''}}'
                  transaction_key: string
                  force_3ds: false
                  descriptive: Descriptive Example
                  value: 17.5
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Properties_Has_ID'
                  - $ref: '#/components/schemas/StatusDetails'
              examples:
                Response:
                  value:
                    id: 4c67e74b-a256-4e0a-965d-97bf5d01bd50
                    status: ok
                    message:
                      - Your request was successfully created
            application/xml:
              example: |-
                <response>
                   <status>ok</status>
                   <message>
                      <string>Your request was successfully created</string>
                   </message>
                   <id>3dc66505-3117-4b62-b2b7-814aec7f0e84</id>
                </response>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              examples:
                Response:
                  value:
                    status: error
                    message:
                      - no frequent found
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      description: ''
      operationId: frequent-authorisation
  /config:
    get:
      tags:
        - Config
      summary: Get Account Config
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Config_Details:
                    $ref: '#/components/schemas/Config_Details'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
    patch:
      tags:
        - Config
      summary: Patch Account Config
      parameters: []
      requestBody:
        description: Payment configuration object to generate a payment
        content:
          application/json:
            schema:
              type: object
              properties:
                generic:
                  type: string
                  description: URL for generic notification
                  default: 'https://www.easypay.pt/generic'
                authorisation:
                  type: string
                  description: URL for authorisation notification
                  default: 'https://www.easypay.pt/authorisation'
                transaction:
                  type: string
                  description: URL for transaction notification
                  default: 'https://www.easypay.pt/transaction'
                visa_fwd:
                  type: string
                  description: URL for redirect clients on credit card forward
                  default: 'https://www.easypay.pt/visa_fwd'
                visa_detail:
                  type: string
                  description: URL for credit card payment detail
                  default: 'https://www.easypay.pt/visa_detail'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Config_Details:
                    $ref: '#/components/schemas/Config_Details'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-codegen-request-body-name: body
  '/capture/{id}':
    get:
      tags:
        - Payment Generic Operations
      summary: Shows capture details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    transaction_key: example key
                    capture_date: '2022-11-28'
                    account:
                      id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                    descriptive: Descriptive Example
                    value: 200
                    splits:
                      - split_key: string
                        split_descriptive: Descriptive Example
                        account:
                          id: 479dfda6-6997-40e4-b5e3-c84335b21a25
                        value: 100
                        margin_account:
                          id: 42ad4f88-dc7f-4e0f-9764-02bf8404d3d1
                        margin_value: 0.1
                        status: waiting
                        id: b40ff7a7-9a55-4348-a86a-b5e9537b927e
                      - split_key: string
                        split_descriptive: Descriptive Example
                        account:
                          id: 1bcc8702-fe04-4fb2-afc9-1b2e151eacbc
                        value: 100
                        margin_account:
                          id: 42ad4f88-dc7f-4e0f-9764-02bf8404d3d1
                        margin_value: 0.1
                        status: waiting
                        id: 4f0a5019-c2a7-43f0-afef-bd008b761642
                    status: failed
                    id: 9595ab59-5f86-414c-8eda-5fc5e627fd2c
                    payment_type: single
                    payment_id: ead8a505-4f14-4ad2-b77b-b6dbf598977d
                    force_3ds: false
                properties:
                  transaction_key:
                    type: string
                  capture_date:
                    type: string
                  account:
                    type: object
                    properties:
                      id:
                        type: string
                  descriptive:
                    type: string
                  value:
                    type: integer
                  splits:
                    type: array
                    items:
                      type: object
                      properties:
                        split_key:
                          type: string
                        split_descriptive:
                          type: string
                        account:
                          type: object
                          properties:
                            id:
                              type: string
                        value:
                          type: integer
                        margin_account:
                          type: object
                          properties:
                            id:
                              type: string
                        margin_value:
                          type: number
                        status:
                          type: string
                        id:
                          type: string
                  status:
                    type: string
                    enum:
                      - delayed
                      - waiting
                      - pending
                      - success
                      - failed
                      - refunded
                  id:
                    type: string
                    format: uuid
                  payment_type:
                    type: string
                    enum:
                      - single
                      - frequent
                  payment_id:
                    type: string
                    format: uuid
                  force_3ds:
                    type: boolean
              examples:
                Response:
                  value:
                    transaction_key: key example
                    capture_date: '2022-11-28'
                    account:
                      id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                    descriptive: Descriptive Example
                    value: 200
                    splits:
                      - split_key: string
                        split_descriptive: Descriptive Example
                        account:
                          id: 479dfda6-6997-40e4-b5e3-c84335b21a25
                        value: 100
                        margin_account:
                          id: 42ad4f88-dc7f-4e0f-9764-02bf8404d3d1
                        margin_value: 0.1
                        status: waiting
                        id: b40ff7a7-9a55-4348-a86a-b5e9537b927e
                      - split_key: key_example
                        split_descriptive: Descriptive Example
                        account:
                          id: 1bcc8702-fe04-4fb2-afc9-1b2e151eacbc
                        value: 100
                        margin_account:
                          id: 42ad4f88-dc7f-4e0f-9764-02bf8404d3d1
                        margin_value: 0.1
                        status: waiting
                        id: 4f0a5019-c2a7-43f0-afef-bd008b761642
                    status: waiting
                    id: 9595ab59-5f86-414c-8eda-5fc5e627fd2c
                    payment_type: single
                    payment_id: ead8a505-4f14-4ad2-b77b-b6dbf598977d
                    force_3ds: false
            application/xml:
              schema:
                type: object
                properties:
                  Properties_Has_Descriptive:
                    $ref: '#/components/schemas/Properties_Has_Descriptive'
                  Properties_Has_ID:
                    $ref: '#/components/schemas/Properties_Has_ID'
                  Properties_Has_Value:
                    $ref: '#/components/schemas/Properties_Has_Value'
              example: |-
                <capture>
                   <transaction_key>Example Key</transaction_key>
                   <capture_date>2019-05-03</capture_date>
                   <account>
                      <id>ebe2d686-359b-4899-a65a-fad09e5acbd7</id>
                   </account>
                   <descriptive>Descriptive Example</descriptive>
                   <value>20</value>
                   <splits>
                      <split>
                         <split_key>Example Split Key 1</split_key>
                         <split_descriptive>Descriptive Split Example 2</split_descriptive>
                         <account>
                            <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                         </account>
                         <value>10</value>
                         <margin_value>0</margin_value>
                      </split>
                      <split>
                         <split_key>Example Split Key 2</split_key>
                         <split_descriptive>Descriptive Split Example 2</split_descriptive>
                         <account>
                            <id>f4bf5e8e-6b0b-4600-81ef-70a41e102a6e</id>
                         </account>
                         <value>10</value>
                         <margin_account>
                            <id>7cc73038-bb1f-4c2f-b0d8-063875529770</id>
                         </margin_account>
                         <margin_value>2</margin_value>
                      </split>
                   </splits>
                   <status>success</status>
                   <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                   <payment_type>single</payment_type>
                   <payment_id>ace99c76-5292-4518-8bee-3c09d5ee067d</payment_id>
                </capture>
            text/csv:
              schema:
                type: object
                properties:
                  Properties_Has_Descriptive:
                    $ref: '#/components/schemas/Properties_Has_Descriptive'
                  Properties_Has_ID:
                    $ref: '#/components/schemas/Properties_Has_ID'
                  Properties_Has_Value:
                    $ref: '#/components/schemas/Properties_Has_Value'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
    post:
      tags:
        - Payment Generic Operations
      summary: 'Captures a Single Auth, Frequent and Frequent Auth'
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Payment configuration object to generate a payment
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  transaction_key: string
                  capture_date: '2017-11-11'
                  account:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                  splits:
                    - split_key: string
                      split_descriptive: Descriptive Example
                      value: 1
                      account:
                        id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                      margin_value: 0.1
                      margin_account:
                        id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                  mbway_sdk:
                    purchase_token: 626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B
                    initial_timestamp: '2018-01-01 23:59:59'
                    merchant_operation_id: TESTACCOUNT5436
                    payload: '{''purchase_token'':''EDEB342D3588DDDEEE3E070476E72A6B222E3456C1C825D3E89A734005CE81F69986045424984F55B3233CBFD090A8A564071BBB493F34C4849C964'',''initial_timestamp'':''2018-09-20T10:46:08+01:00'',''merchant_operation_id'':''TESTACCOUNT5436'',''payload'':{''amount'':1000,''currencyCode'':''9782''}}'
                  force_3ds: false
                  descriptive: Descriptive Example
                  value: 17.5
              properties:
                transaction_key:
                  type: string
                  description: Your internal key identifying this capture.
                  example: key example
                  maxLength: 50
                capture_date:
                  type: string
                  format: Y-m-d
                  example: '2022-11-11'
                account:
                  type: object
                  description: For multi-account clients.
                  properties:
                    id:
                      type: string
                      description: The uuid of the account.
                      format: uuid
                splits:
                  type: array
                  description: Used in split payments.
                  items:
                    type: object
                    properties:
                      split_key:
                        type: string
                        description: The merchant's internal key for identifying the split.
                        maxLength: 50
                        example: example key
                      split_descriptive:
                        type: string
                        description: The description of the split.
                        maxLength: 255
                      value:
                        type: number
                        format: double
                        minimum: 0.01
                        description: 'The split funds, rounded to 2 decimals.'
                        example: 10.55
                      account:
                        type: object
                        description: The account owner of the split.
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: The uuid of the account.
                      margin_value:
                        type: number
                        description: 'The margin funds, rounded to 2 decimals.'
                        minimum: 0.01
                        format: double
                      margin_account:
                        type: object
                        description: The account used for the margin.
                        properties:
                          id:
                            type: string
                            format: uuid
                    required:
                      - value
                mbway_sdk:
                  $ref: '#/components/schemas/Mbway_sdk'
                force_3ds:
                  type: boolean
                  default: false
                  description: Whether or not you want to force the 3DS authentication on Credit Cards (used only on Frequent capture without authorisation).
                descriptive:
                  type: string
                  maxLength: 255
                  description: This will appear in the bank statement/mbway application.
                  example: descriptive example
                value:
                  type: number
                  description: Value will be rounded to 2 decimals.
                  minimum: 0.05
                  format: double
                  example: 20.55
              required:
                - value
            examples:
              Request:
                value:
                  transaction_key: key example
                  capture_date: '2022-11-11'
                  account:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  splits:
                    - split_key: example key
                      split_descriptive: string
                      value: 0.01
                      account:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      margin_value: 0.01
                      margin_account:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  mbway_sdk:
                    purchase_token: 626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B
                    initial_timestamp: '2018-01-01 23:59:59'
                    merchant_operation_id: TESTACCOUNT5436
                    payload: '{''purchase_token'':''EDEB342D3588DDDEEE3E070476E72A6B222E3456C1C825D3E89A734005CE81F69986045424984F55B3233CBFD090A8A564071BBB493F34C4849C964'',''initial_timestamp'':''2018-09-20T10:46:08+01:00'',''merchant_operation_id'':''TESTACCOUNT5436'',''payload'':{''amount'':1000,''currencyCode'':''9782''}}'
                  force_3ds: false
                  descriptive: string
                  value: 20.55
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Properties_Has_ID:
                    $ref: '#/components/schemas/Properties_Has_ID'
                  StatusDetails:
                    $ref: '#/components/schemas/StatusDetails'
              examples:
                Response:
                  value:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 522b83f3-cd98-48ee-8e40-9a94d6b79eb1
            application/xml:
              example: |-
                <response>
                   <status>ok</status>
                   <message>
                      <string>Your request was successfully created</string>
                   </message>
                   <id>d01a2919-ffa6-4f81-a208-7f153249fd48</id>
                </response>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '428':
          description: Precondition Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
  /your-generic-notification-endpoint:
    post:
      tags:
        - Notification
      summary: Generic Notification
      requestBody:
        description: We will send you this json in our notifications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification_Generic'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-codegen-request-body-name: body
  '/authorisation/{id}':
    get:
      tags:
        - Payment Generic Operations
      summary: Shows authorisation details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    id: ef7d7bc6-6c1a-4193-a33e-d9e7bba29727
                    status: success
                    key: Example_Key
                    customer:
                      id: 88702340-8aa2-44b5-8e6c-dadbd25538c7
                      name: Robert Stuart
                      email: email@example.com
                      phone: '911234567'
                      key: Customer key
                      language: PT
                    method:
                      type: CC
                      status: active
                      url: 'https://test.easypay.pt/_s/cof/c11_freq.php?e=59126&r=810009391&c=PT&l=PT&ep_k1=d2152db6-2e36-4436-9a46-f8cf4b7aca43'
                      last_four: '0000'
                      card_type: VISA
                      expiration_date: 03/24
                    currency: EUR
                    value: 20
                properties:
                  id:
                    type: string
                  status:
                    type: string
                    enum:
                      - success
                      - pending
                      - failed
                  key:
                    type: string
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      phone:
                        type: string
                      key:
                        type: string
                      language:
                        type: string
                  method:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - mb
                          - cc
                          - dd
                          - mbw
                      status:
                        type: string
                        enum:
                          - waiting
                          - pending
                          - active
                          - failed
                          - canceled
                          - deleted
                      url:
                        type: string
                      last_four:
                        type: string
                        description: Last 4 digits of the submitted Credit Card.
                      card_type:
                        type: string
                        enum:
                          - MasterCard
                          - VISA
                      expiration_date:
                        type: string
                  currency:
                    type: string
                    enum:
                      - EUR
                      - BRL
                  value:
                    type: integer
              examples:
                Response:
                  value:
                    id: ef7d7bc6-6c1a-4193-a33e-d9e7bba29727
                    status: success
                    key: Example Key
                    customer:
                      id: 88702340-8aa2-44b5-8e6c-dadbd25538c7
                      name: Robert Stuart
                      email: email@example.com
                      phone: '911234567'
                      key: Customer key
                      language: PT
                    method:
                      type: CC
                      status: active
                      url: 'https://test.easypay.pt/_s/cof/c11_freq.php?e=59126&r=810009391&c=PT&l=PT&ep_k1=d2152db6-2e36-4436-9a46-f8cf4b7aca43'
                      last_four: '0000'
                      card_type: VISA
                      expiration_date: 03/24
                    currency: EUR
                    value: 20
            application/xml:
              example: |-
                <authorisation>
                   <currency>EUR</currency>
                   <customer>
                      <email>customer@example.com</email>
                      <fiscal_number>PT123456789</fiscal_number>
                      <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                      <key>Key Example</key>
                      <language>PT</language>
                      <name>Customer Example</name>
                      <phone>911234567</phone>
                      <phone_indicative>+351</phone_indicative>
                   </customer>
                   <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                   <key>Example Key</key>
                   <message>string</message>
                   <method>
                      <card_type>VISA</card_type>
                      <entity>10611</entity>
                      <expiration_date>01/22</expiration_date>
                      <last_four>1234</last_four>
                      <reference>987654321</reference>
                      <status>pending</status>
                      <type>mb</type>
                      <url>https://www.easypay.pt/_s/c11.php?e=10611&amp;r=987654321&amp;v=19&amp;t_key=example+key&amp;c=EN&amp;l=EN</url>
                   </method>
                   <status>pending</status>
                   <transations>
                      <transaction>
                         <date>2017-12-12 10:10:59</date>
                         <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                         <key>Example Key</key>
                         <method>mb</method>
                         <transfer_date>2017-12-12</transfer_date>
                         <values>
                            <fixed_fee>0.3</fixed_fee>
                            <paid>15.63</paid>
                            <requested>15.63</requested>
                            <tax>2.03</tax>
                            <transfer>10</transfer>
                            <variable_fee>3.3</variable_fee>
                         </values>
                      </transaction>
                   </transations>
                   <value>10</value>
                   <value_captured>10</value_captured>
                </authorisation>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      description: ''
  '/checkout/{id}':
    get:
      tags:
        - Checkout
      summary: Shows checkout details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkout_Details'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      security:
        - accountId: []
          apiKey: []
    delete:
      tags:
        - Checkout
      summary: Cancels a checkout
      description: This cancels the Checkout and deletes the payment associated with it if possible.
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      security:
        - accountId: []
          apiKey: []
  /checkout:
    post:
      tags:
        - Checkout
      summary: Create Checkout
      description: Creates a Checkout Session.
      parameters: []
      requestBody:
        description: Checkout request details
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  type:
                    - single
                    - frequent
                    - subscription
                  payment:
                    methods:
                      - mb
                      - cc
                      - mbw
                      - vi
                      - uf
                      - sc
                      - dd
                    type: sale
                    capture:
                      transaction_key: string
                      capture_date: string
                      account:
                        id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                      splits:
                        - split_key: string
                          split_descriptive: Descriptive Example
                          value: 1
                          account:
                            id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                          margin_value: 0.1
                          margin_account:
                            id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                      descriptive: Descriptive Example
                    expiration_time: '2017-12-12 16:05'
                    currency: EUR
                    key: Example Key
                    max_value: 20
                    min_value: 2
                    unlimited_payments: false
                    frequency: 1D
                    max_captures: 10
                    start_time: '2017-12-12 16:05'
                    failover: true
                    capture_now: true
                    retries: 2
                  order:
                    items:
                      - description: Item in Shopping Cart
                        quantity: 2
                        key: Example Key
                        value: 17.5
                    key: Example Key
                    value: 17.5
                  customer:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
              properties:
                type:
                  type: array
                  description: 'Only the first value in the Array is considered (e.g. [''single'', ''frequent''] would be equivalent to [''single'']).'
                  items:
                    type: string
                    enum:
                      - single
                      - frequent
                      - subscription
                payment:
                  type: object
                  description: Describing the payment configuration.
                  required:
                    - methods
                  properties:
                    methods:
                      type: array
                      description: |-
                        The available methods are different according to the chosen payment type:

                        Available for single, frequent or subscription payment type:

                        * 'cc' (Credit Card)
                        * 'dd' (Direct Debit)

                        Available for single or frequent payment type:
                        * 'mbw' (MB WAY)

                        * 'mb' (Multibanco)

                        * 'vi' (Virtual IBAN)

                        * 'uf' (Universo Flex)

                        * 'sc' (Santander Consumer)
                      items:
                        type: string
                        enum:
                          - cc
                          - mbw
                          - mb
                          - dd
                          - vi
                          - uf
                          - sc
                    type:
                      type: string
                      description: The type of payment for Credit Card and MB WAY operations.
                      enum:
                        - sale
                        - authorisation
                      default: sale
                    capture:
                      type: object
                      description: Required if the payment type is sale.
                      properties:
                        transaction_key:
                          type: string
                          description: The internal key used to identify this transaction in the merchant's database.
                          maxLength: 50
                        capture_date:
                          type: string
                          description: The capture date.
                          format: Y-m-d
                          example: '2017-12-12 16:05'
                        account:
                          type: object
                          description: For multi-account clients.
                          properties:
                            id:
                              type: string
                              description: The uuid of the account.
                              format: uuid
                        splits:
                          type: array
                          description: Used in split payments.
                          items:
                            type: object
                            properties:
                              split_key:
                                type: string
                                description: The merchant's internal key for identifying the split.
                                maxLength: 50
                              split_descriptive:
                                type: string
                                description: The description of the split.
                                maxLength: 255
                              value:
                                type: number
                                description: 'The split funds, rounded to 2 decimals.'
                                minimum: 0.01
                                format: double
                              account:
                                type: object
                                description: The account owner of the split.
                                properties:
                                  id:
                                    type: string
                                    description: The uuid of the account.
                                    format: uuid
                              margin_value:
                                type: number
                                description: 'The margin funds, rounded to 2 decimals.'
                              margin_account:
                                type: object
                                description: The account used for the margin.
                                properties:
                                  id:
                                    type: string
                                    description: The uuid of the account.
                                    format: uuid
                            required:
                              - value
                        descriptive:
                          type: string
                          description: |-
                            Required if the payment method is 'mbw'.</br>
                            The description of the capture. Will be displayed in the bank statement or in the MB WAY application.
                          maxLength: 255
                    expiration_time:
                      type: string
                      description: |-
                        The last possible time to make the payment. Applicable in Multibanco payments.

                        Note: If the expiration time is less than the default checkout session expiration (which is 30 minutes),</br> the user won't be able to interact with the Checkout after that time.
                      format: 'Y-m-d H:i'
                      example: '2017-12-12 16:05'
                    currency:
                      type: string
                      enum:
                        - EUR
                        - BRL
                      default: EUR
                    key:
                      type: string
                      description: The merchant's key for identifying the payment.
                      maxLength: 50
                    max_value:
                      type: number
                      description: <font color="#FF0000">Additional property for frequent payments.</font>
                      format: double
                      minimum: 0.01
                    min_value:
                      type: number
                      description: <font color="#FF0000">Additional property for frequent payments.</font>
                      minimum: 0.01
                      format: double
                    unlimited_payments:
                      type: boolean
                      description: |-
                        <font color="#FF0000">Additional property for frequent payments.</font>

                        Unlimited transactions.</br>Uses 'max_value' and 'min_value' as limits per transaction instead.
                      default: true
                    frequency:
                      type: string
                      description: <font color="#FF0000">Required property for subscription payments.</font>
                      enum:
                        - 1D
                        - 1W
                        - 2W
                        - 1M
                        - 2M
                        - 1M
                        - 2M
                        - 3M
                        - 4M
                        - 6M
                        - 1Y
                        - 2Y
                        - 3Y
                    max_captures:
                      type: integer
                      description: |-
                        <font color="#FF0000">Additional property for subscription payments.</font>

                        Number of payments (required when no expiration_time is set).
                    start_time:
                      type: string
                      description: |-
                        <font color="#FF0000">Required property for subscription payments.</font>

                        Defining the start of billing cycles.
                      format: 'Y-m-d H:i'
                      example: '2017-12-12 16:05'
                    failover:
                      type: boolean
                      description: |-
                        <font color="#FF0000">Additional property for subscription payments.</font>

                        After all retries failed, the payment cycle can have another try with another single method.
                      default: false
                    capture_now:
                      type: boolean
                      description: |-
                        <font color="#FF0000">Additional property for subscription payments.</font>

                        Whether to schedule an immediate capture and schedule the second one for start_time.
                      default: false
                    retries:
                      type: number
                      description: |-
                        <font color="#FF0000">Additional property for subscription payments.</font>

                        Number of retries in each payment cycle.</br>
                        The chosen frequency will define the max number of possible retries.
                      default: 0
                order:
                  type: object
                  description: 'Representing the order/cart being paid. '
                  required:
                    - value
                  properties:
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          description:
                            type: string
                            maxLength: 100
                            description: The description of the item.
                          quantity:
                            type: integer
                            description: Quantity of this item being paid.
                          key:
                            type: string
                            description: The merchant's key to identify the item.
                            maxLength: 50
                          value:
                            type: number
                            format: double
                            minimum: 0.01
                            description: 'The price being paid for the specific item(s), rounded to 2 decimals.'
                    key:
                      type: string
                      description: The merchant's key to identify the order.
                    value:
                      type: number
                      description: 'The price being paid for the entire order, rounded to 2 decimals.'
                      minimum: 0.01
                customer:
                  type: object
                  description: The customer details.
                  required:
                    - email
                  properties:
                    id:
                      type: string
                      description: The uuid of a previously created customer.
                      format: uuid
                    name:
                      type: string
                      maxLength: 255
                      description: Required if payment.method is 'mbw'</br>The customer's name.
                    email:
                      type: string
                      maxLength: 70
                      description: The customer's email.
                    phone:
                      type: string
                      maxLength: 15
                      description: Required if payment.method is 'mbw'</br>The customer's phone number.
                    phone_indicative:
                      type: string
                      maxLength: 5
                      description: The phone country code.
                    fiscal_number:
                      type: string
                      maxLength: 20
                      description: The customer's fiscal number (prefixed by the country code).
                      example: PT123456789
                    key:
                      type: string
                      maxLength: 255
                      description: The merchant's key to identify the customer.
              required:
                - type
                - payment
                - order
                - customer
            examples:
              Post Subscription Payment:
                value:
                  type:
                    - subscription
                  payment:
                    methods:
                      - dd
                    type: sale
                    sdd_mandate:
                      iban: PT50002700000001234567833
                      name: Name Example
                      email: customer@example.com
                      phone: '912997715'
                      account_holder: Acount Name Example
                      key: Sdd Mandate key
                    capture:
                      descriptive: Purchase in MyStore
                    expiration_time: '2022-10-12 16:05'
                    currency: EUR
                    key: Example Key
                    frequency: 1Y
                    max_captures: 10
                    start_time: '2022-10-12 16:05'
                    failover: true
                    capture_now: true
                    retries: 2
                  order:
                    items:
                      - description: T-shirt
                        quantity: 1
                        key: t-shirt
                        value: 12.5
                      - description: Gloves
                        quantity: 1
                        key: gloves
                        value: 7
                    key: order-123
                    value: 19.5
                  customer:
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
              Post Frequent Payment:
                value:
                  type:
                    - frequent
                  payment:
                    methods:
                      - dd
                    type: sale
                    sdd_mandate:
                      iban: PT50002700000001234567833
                      name: Name Example
                      email: customer@example.com
                      phone: '912997715'
                      account_holder: Acount Name Example
                      key: Sdd Mandate key
                    capture:
                      descriptive: Purchase in MyStore
                    expiration_time: '2022-10-12 16:05'
                    currency: EUR
                    key: Example Key
                    max_value: 20
                    min_value: 2
                    unlimited_payments: false
                  order:
                    items:
                      - description: T-shirt
                        quantity: 1
                        key: t-shirt
                        value: 12.5
                      - description: Gloves
                        quantity: 1
                        key: gloves
                        value: 7
                    key: order-123
                    value: 19.5
                  customer:
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
              Post Single Payment:
                value:
                  type:
                    - single
                  payment:
                    methods:
                      - dd
                    type: sale
                    sdd_mandate:
                      iban: PT50002700000001234567833
                      name: Name Example
                      email: customer@example.com
                      phone: '912997715'
                      account_holder: Acount Name Example
                      key: Sdd Mandate key
                    capture:
                      descriptive: Purchase in MyStore
                    expiration_time: '2022-10-12 16:05'
                    currency: EUR
                    key: Example Key
                  order:
                    items:
                      - description: T-shirt
                        quantity: 1
                        key: t-shirt
                        value: 10.5
                      - description: Gloves
                        quantity: 1
                        key: gloves
                        value: 10.5
                    key: order-123
                    value: 21
                  customer:
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
              Full example:
                value:
                  type:
                    - single
                    - frequent
                    - subscription
                  payment:
                    methods:
                      - mb
                      - cc
                      - mbw
                      - vi
                      - uf
                      - sc
                    type: sale
                    capture:
                      transaction_key: string
                      capture_date: string
                      account:
                        id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                      splits:
                        - split_key: string
                          split_descriptive: Descriptive Example
                          value: 1
                          account:
                            id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                          margin_value: 0.1
                          margin_account:
                            id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                      descriptive: Descriptive Example
                    expiration_time: '2017-12-12 16:05'
                    currency: EUR
                    key: Example Key
                    sdd_mandate:
                      id: '12345678901'
                      iban: PT50002700000001234567833
                      key: Key Example
                      name: Name Example
                      email: customer@example.com
                      phone: '911234567'
                      account_holder: Acount Name Example
                      country_code: PT
                      max_num_debits: '12'
                    max_value: 20
                    min_value: 2
                    unlimited_payments: false
                    frequency: 1D
                    max_captures: 10
                    start_time: '2017-12-12 16:05'
                    failover: true
                    capture_now: true
                    retries: 2
                  order:
                    items:
                      - description: Item in Shopping Cart
                        quantity: 2
                        key: Example Key
                        value: 17.5
                    key: Example Key
                    value: 17.5
                  config:
                    - null
                  customer:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  session:
                    type: string
                    description: Session token to be used by the rest of the Checkout process.
                  config:
                    type: object
                    description: Configuration properties.
                    deprecated: true
                  id:
                    type: string
                    format: uuid
              examples:
                example-1:
                  value:
                    id: 10d3a41a-c9c4-486e-8da7-9490e5f097b7
                    session: XkhRqoQtbBakUnjEJA4lYSCtboITWSb-ijxRMWKj7C9ormZ_4JubSB3qjy4XuORJFSrR0OsQ0ypE2Ws9Zl0N2REmR0CMNewH8ghyR1NBnPzDJ1AAuj9LvAhdv9SS-MXRh20_jmVz0MTcaD6E9WfHMiGSyej8eLMaE2hbSHn8DAO7kUSy8nzIIIUbR3pbpEpwxeO6fgHB3hdLGWrGUjeRq-Dq1Q_RF_ZWDPOGPwehXb3YRTatcjBG_2yoyGWWBaABOlkOx_uLaZIdrHMRXaDwLFDoN-eiu3BH1KKrut6pcE_Gc6laTf2AINBQIuSzKHLT4MFpTkrxdfPiD67w8aENm2HuzFc08I46KxdQG-2dSN522jZWDC2z4r4HFZ8LWVlDPuLbpui-WoWOJrJAnW3nPhyaKfUeu4KuU3BKYtJrtOoqs5ingkKWen0jm6AuFeZDeYRlRtj19S6d3P4q7Om3PVwil7c0K0brq31SmLHZdvsG_gHOPSZ6qrQy_95NZO0x934tBIUK91C1Bnm1Z9wA2Pp2hIeprOXMuZXkuanODro=
                    config: null
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      operationId: checkout-post
      security:
        - accountId: []
          apiKey: []
  /subscription:
    get:
      tags:
        - Subscription Payment
      summary: List subscription payments
      description: Full report with all the subscriptions payments from your Account Id
      parameters:
        - name: page
          in: query
          description: Page Number
          schema:
            type: number
        - name: records_per_page
          in: query
          description: 'Limit records per page (Max: 100)'
          schema:
            type: number
            default: 20
        - name: expiration_time
          in: query
          description: Filter by expiration time interval (max 30 days)
          schema:
            type: string
        - name: method
          in: query
          description: Filter by method
          schema:
            type: string
        - name: customer
          in: query
          description: Filter by customer key
          schema:
            type: string
        - name: id
          in: query
          description: Filter by id
          schema:
            type: string
        - name: key
          in: query
          description: Filter by subscription key
          schema:
            type: string
        - name: created_at
          in: query
          description: Filter by created datetime interval (max 30 days)
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    meta:
                      page:
                        current: 1
                        total: 826
                      records:
                        total: 1651
                        per_page: 2
                      links:
                        first: '?page=1'
                        prev: ''
                        next: '?page=2'
                        last: '?page=826'
                    data:
                      - id: 93f03ed9-e1f4-48d4-9d0a-0be2d6846b84
                        key: ''
                        expiration_time: ''
                        start_time: '2022-12-04T12:00:00Z'
                        frequency: 1Y
                        retries: 0
                        max_captures: 2
                        failover: false
                        capture_now: false
                        customer:
                          id: 12687579-e646-4963-9270-2721ae17fcf4
                          language: ''
                        method:
                          type: DD
                          status: active
                          sdd_mandate:
                            id: '50124438752'
                            billing_entity: PT16103627
                            iban: PT500027**XX7833
                            key: Sdd Mandate key
                            name: Fre*** DD***
                            email: cus***@example.com
                            phone: 911***567
                            account_holder: Acc*** Exa***
                            country_code: PT
                            max_num_debits: '0'
                        currency: EUR
                        value: 17.5
                        created_at: '2022-11-22 14:31:49'
                      - id: 63f3f5a0-1543-4ed7-9b44-7f0f802ff476
                        key: ''
                        expiration_time: '2022-12-12T16:05:00Z'
                        start_time: '2022-12-04T12:00:00Z'
                        frequency: 1Y
                        retries: 2
                        max_captures: 10
                        failover: true
                        capture_now: false
                        customer:
                          id: d927731a-8684-4aa9-bc50-f691d666c117
                          name: Cus*** Exa***
                          email: cus***@example.com
                          phone: 911***567
                          phone_indicative: '+351'
                          fiscal_number: PT123***89
                          key: Key Example
                          language: PT
                        method:
                          type: DD
                          status: inactive
                          sdd_mandate:
                            id: '50124437147'
                            billing_entity: PT16103627
                            iban: PT500027**XX7833
                            key: Sdd Mandate key
                            name: Fre*** DD***
                            email: cus***@example.com
                            phone: 911***522
                            account_holder: Acc*** Exa***
                            country_code: PT
                            max_num_debits: '0'
                        currency: EUR
                        value: 17.5
                        created_at: '2022-11-22 14:15:10'
                properties:
                  meta:
                    type: object
                    properties:
                      page:
                        type: object
                        properties:
                          current:
                            type: integer
                          total:
                            type: integer
                      records:
                        type: object
                        properties:
                          total:
                            type: integer
                          per_page:
                            type: integer
                      links:
                        type: object
                        properties:
                          first:
                            type: string
                          prev:
                            type: string
                          next:
                            type: string
                          last:
                            type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        key:
                          type: string
                        expiration_time:
                          type: string
                        start_time:
                          type: string
                        frequency:
                          type: string
                        retries:
                          type: integer
                        max_captures:
                          type: integer
                        failover:
                          type: boolean
                        capture_now:
                          type: boolean
                        customer:
                          type: object
                          properties:
                            id:
                              type: string
                            language:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            phone:
                              type: string
                            phone_indicative:
                              type: string
                            fiscal_number:
                              type: string
                            key:
                              type: string
                        method:
                          type: object
                          properties:
                            type:
                              type: string
                            status:
                              type: string
                            sdd_mandate:
                              type: object
                              properties:
                                id:
                                  type: string
                                billing_entity:
                                  type: string
                                iban:
                                  type: string
                                key:
                                  type: string
                                name:
                                  type: string
                                email:
                                  type: string
                                phone:
                                  type: string
                                account_holder:
                                  type: string
                                country_code:
                                  type: string
                                max_num_debits:
                                  type: string
                        currency:
                          type: string
                        value:
                          type: number
                        created_at:
                          type: string
                          description: Date when payment was created
              examples:
                Response:
                  value:
                    meta:
                      page:
                        current: 1
                        total: 827
                      records:
                        total: 1654
                        per_page: 2
                      links:
                        first: '?page=1'
                        prev: ''
                        next: '?page=2'
                        last: '?page=827'
                    data:
                      - id: 7a3b9c3b-8bc8-4aa9-b67b-43b7a8e0377f
                        key: Default Key
                        expiration_time: '2022-12-04T12:00:00Z'
                        start_time: '2022-12-04T12:00:00Z'
                        frequency: 1Y
                        retries: 2
                        max_captures: 2
                        failover: false
                        capture_now: false
                        customer:
                          id: 93a0b7e4-d0ae-4da2-bdcf-c9a735e44a9a
                          name: '***'
                          email: cus***@example.com
                          phone: '***'
                          fiscal_number: '***'
                          key: Customer Key
                          language: PT
                        method:
                          type: DD
                          status: active
                          sdd_mandate:
                            id: '50124440050'
                            billing_entity: PT16103627
                            iban: PT500027**XX7833
                            key: Sdd Mandate key
                            name: Fre*** DD***
                            email: cus***@example.com
                            phone: 911***567
                            account_holder: Acc*** Exa***
                            country_code: PT
                            max_num_debits: '0'
                        currency: EUR
                        value: 17.5
                        created_at: '2022-11-22 15:29:54'
                      - id: 2e41fc8e-76ee-4533-a296-809c7bfbc811
                        key: ''
                        expiration_time: ''
                        start_time: '2022-12-04T12:00:00Z'
                        frequency: 1Y
                        retries: 0
                        max_captures: 2
                        failover: false
                        capture_now: false
                        customer:
                          id: 33058cb5-ca1e-4314-b4ae-c6a86b218157
                          language: ''
                        method:
                          type: CC
                          status: deleted
                          url: 'https://cc.test.easypay.pt/start/2e41fc8e-76ee-4533-a296-809c7bfbc811'
                        currency: EUR
                        value: 17.5
                        created_at: '2022-11-22 15:19:51'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
    post:
      tags:
        - Subscription Payment
      summary: Create subscription payment
      parameters: []
      requestBody:
        description: Payment configuration object to generate a payment
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  frequent_id: 4c67e74b-a256-4e0a-965d-97bf5d01bd50
                  capture:
                    transaction_key: string
                    account:
                      id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    descriptive: Descriptive Example
                  expiration_time: '2017-12-12 16:05'
                  currency: EUR
                  customer:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
                  key: Example Key
                  value: 17.5
                  frequency: 1D
                  max_captures: 10
                  start_time: '2017-12-12 16:05'
                  failover: true
                  capture_now: true
                  retries: 2
                  method: cc
                  sdd_mandate:
                    id: '12345678901'
                    iban: PT50002700000001234567833
                    key: Key Example
                    name: Name Example
                    email: customer@example.com
                    phone: '911234567'
                    account_holder: Acount Name Example
                    country_code: PT
                    max_num_debits: '12'
              properties:
                frequent_id:
                  type: string
                  description: Only required to create a subscription from active Frequent Payment
                  format: uuid
                capture:
                  type: object
                  properties:
                    transaction_key:
                      type: string
                      description: The internal key used to identify this transaction in the merchant's database.
                      maxLength: 50
                    account:
                      type: object
                      description: For multi-account clients.
                      properties:
                        id:
                          type: string
                          description: The uuid of the account.
                          format: uuid
                    descriptive:
                      type: string
                      description: The description of the capture. Will be displayed in the bank statement or in the MB WAY application.
                      maxLength: 255
                expiration_time:
                  type: string
                  description: Required only when no max_captures is set.</br>The last possible time to make the payment.
                  format: 'Y-m-d H:i'
                  example: '2017-12-12 16:05'
                currency:
                  type: string
                  default: EUR
                  enum:
                    - EUR
                    - BRL
                  example: EUR
                customer:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: The uuid of a previously created customer.
                    name:
                      type: string
                      description: The customer's name.
                      maxLength: 255
                    email:
                      type: string
                      description: The customer's e-mail.
                      maxLength: 70
                    phone:
                      type: string
                      description: The customer's phone.
                      maxLength: 15
                    phone_indicative:
                      type: string
                      maxLength: 5
                      example: '+351'
                    fiscal_number:
                      type: string
                      description: The customer's fiscal number (prefixed by the country code).
                      maxLength: 20
                      example: PT123456789
                    key:
                      type: string
                      description: The merchant's key to identify the customer.
                      maxLength: 255
                      example: Example Key
                    language:
                      type: string
                      example: PT
                      default: PT
                      format: ISO Alpha-2 code
                key:
                  type: string
                  description: The merchant's key for identifying the payment.
                  maxLength: 50
                  example: Example Key
                value:
                  type: number
                  description: The payment value.</br>Will be rounded to 2 decimals.
                  format: double
                  minimum: 0.5
                  example: 12.55
                  exclusiveMinimum: true
                frequency:
                  type: string
                  enum:
                    - 1D
                    - 1W
                    - 2W
                    - 1M
                    - 2M
                    - 3M
                    - 4M
                    - 6M
                    - 1Y
                    - 2Y
                    - 3Y
                  example: 1W
                max_captures:
                  type: integer
                  description: Required when no expiration_time is set.</br>Number of payments.
                start_time:
                  type: string
                  example: '2017-12-12 16:05'
                  description: Defining the start of billing cycles.
                  format: 'Y-m-d H:i'
                failover:
                  type: boolean
                  default: false
                  description: 'After all retries failed, the payment cycle can have another try with another single method.'
                capture_now:
                  type: boolean
                  description: Whether to schedule an immediate capture and schedule the second one for start_time.
                  default: false
                retries:
                  type: integer
                  default: 0
                  description: |-
                    Number of retries in each payment cycle.</br>
                    The chosen frequency will define the max number of possible retries.
                method:
                  type: string
                  example: cc
                  enum:
                    - cc
                    - dd
                  description: The payment methods.
                sdd_mandate:
                  $ref: '#/components/schemas/SddMandate'
              required:
                - value
                - frequency
                - start_time
                - method
            examples:
              Create a Subscription with a CC payment method:
                value:
                  expiration_time: '2022-12-04 12:00'
                  max_captures: 2
                  start_time: '2022-12-04 12:00'
                  value: 17.55
                  frequency: 1D
                  method: cc
              Create a Subscription with a DD payment method:
                value:
                  max_captures: 2
                  start_time: '2022-12-04 12:00'
                  value: 17.5
                  frequency: 1Y
                  method: dd
                  sdd_mandate:
                    iban: PT50002700000001234567833
                    name: Frequent Payment DD
                    email: customer@example.com
                    phone: '911234567'
                    account_holder: Account Name Example
                    key: Sdd Mandate key
              Full filled example:
                value:
                  frequent_id: 4c67e74b-a256-4e0a-965d-97bf5d01bd50
                  capture:
                    transaction_key: string
                    account:
                      id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    descriptive: Descriptive Example
                  expiration_time: '2017-12-12 16:05'
                  currency: EUR
                  customer:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
                  key: Example Key
                  value: 17.5
                  frequency: 1D
                  max_captures: 10
                  start_time: '2017-12-12 16:05'
                  failover: true
                  capture_now: true
                  retries: 2
                  method: cc
                  sdd_mandate:
                    id: '12345678901'
                    iban: PT50002700000001234567833
                    key: Key Example
                    name: Name Example
                    email: customer@example.com
                    phone: '911234567'
                    account_holder: Acount Name Example
                    country_code: PT
                    max_num_debits: '12'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
                  method:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                      sdd_mandate:
                        type: object
                        properties:
                          id:
                            type: string
                          billing_entity:
                            type: string
                          iban:
                            type: string
                          key:
                            type: string
                          name:
                            type: string
                          email:
                            type: string
                          phone:
                            type: string
                          account_holder:
                            type: string
                          country_code:
                            type: string
                          reference_adc:
                            type: string
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                x-examples:
                  example-1:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 18e9fe0f-55b5-4f4b-832e-96fa3c1a4239
                    method:
                      type: dd
                      status: active
                      sdd_mandate:
                        id: '50124434314'
                        billing_entity: PT16103627
                        iban: PT50002700000001234567833
                        key: Sdd Mandate key
                        name: Frequent Payment DD
                        email: customer@example.com
                        phone: '911234567'
                        account_holder: Account Name Example
                        country_code: PT
                        reference_adc: '50124434314'
                    customer:
                      id: ee3e827f-0810-48a5-bd46-ade7fb9ec5f8
              examples:
                Expect Response from cc payment method:
                  value:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: b3dd33b8-ace7-4239-89ef-c9bdf4fdb14b
                    method:
                      type: cc
                      status: waiting
                      url: 'https://cc.test.easypay.pt/start/b3dd33b8-ace7-4239-89ef-c9bdf4fdb14b'
                    customer:
                      id: f80e90fb-9cc5-40c2-832f-0497a2092f82
                Expect Response from dd payment method:
                  value:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: b4d8c977-9e71-48b3-a251-5ecb49ee69c7
                    method:
                      type: dd
                      status: active
                      sdd_mandate:
                        id: '50124435919'
                        billing_entity: PT16103627
                        iban: PT50002700000001234567833
                        key: Sdd Mandate key
                        name: Frequent Payment DD
                        email: customer@example.com
                        phone: '911234567'
                        account_holder: Account Name Example
                        country_code: PT
                        reference_adc: '50124435919'
                    customer:
                      id: e9e62539-67b2-4180-97e3-38e706d64138
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-codegen-request-body-name: body
      description: |-
        Subscriptions are periodic payments of the same amount of money, configured through Checkout or our Payments API.

        Subscriptions support a number of different frequencies, ranging from daily to once every three years. Their last payment can be determined by the end date of the subscription, as well as the total number of payments captured. 

        They also support a configurable number of retries for each capture in case of failure, as well as falling back to another (single) payment method if the recurring one is not successful.

        Supported methods for subscriptions are: <i style="color:red">Credit Card</i> and <i style="color:red">Direct Debit.</i>
  '/subscription/{id}':
    get:
      tags:
        - Subscription Payment
      summary: Shows subscription payment details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    id: 63f3f5a0-1543-4ed7-9b44-7f0f802ff476
                    key: ''
                    expiration_time: '2022-12-12T16:05:00Z'
                    start_time: '2022-12-04T12:00:00Z'
                    frequency: 1Y
                    retries: 2
                    max_captures: 10
                    failover: true
                    capture_now: false
                    customer:
                      id: d927731a-8684-4aa9-bc50-f691d666c117
                      name: Customer Example
                      email: customer@example.com
                      phone: '911234567'
                      phone_indicative: '+351'
                      fiscal_number: PT123456789
                      key: Key Example
                      language: PT
                    method:
                      type: DD
                      status: inactive
                      sdd_mandate:
                        id: '50124437147'
                        billing_entity: PT16103627
                        iban: PT50002700XXXXXXXXXXX7833
                        key: Sdd Mandate key
                        name: Frequent Payment DD
                        email: customer@example.com
                        phone: '911234522'
                        account_holder: Account Name Example
                        country_code: PT
                        max_num_debits: '0'
                    currency: EUR
                    value: 17.5
                    created_at: '2022-11-22 14:15:10'
                properties:
                  id:
                    type: string
                    format: uuid
                  key:
                    type: string
                  expiration_time:
                    type: string
                  start_time:
                    type: string
                  frequency:
                    type: string
                  retries:
                    type: integer
                  max_captures:
                    type: integer
                  failover:
                    type: boolean
                  capture_now:
                    type: boolean
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      phone:
                        type: string
                      phone_indicative:
                        type: string
                      fiscal_number:
                        type: string
                      key:
                        type: string
                      language:
                        type: string
                  method:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                        enum:
                          - waiting
                          - pending
                          - active
                          - deleted
                          - inactive
                      url:
                        type: string
                        format: url
                        example: 'https://cc.test.easypay.pt/start/2e41fc8e-76ee-4533-a296-809c7bfbc811'
                        description: Only if the payment methos is 'cc'.
                      sdd_mandate:
                        type: object
                        properties:
                          id:
                            type: string
                          billing_entity:
                            type: string
                          iban:
                            type: string
                          key:
                            type: string
                          name:
                            type: string
                          email:
                            type: string
                          phone:
                            type: string
                          account_holder:
                            type: string
                          country_code:
                            type: string
                          max_num_debits:
                            type: string
                  currency:
                    type: string
                  value:
                    type: number
                  created_at:
                    type: string
                    description: Date when payment was created
              examples:
                Response:
                  value:
                    id: 7a3b9c3b-8bc8-4aa9-b67b-43b7a8e0377f
                    key: Default Key
                    expiration_time: '2022-12-04T12:00:00Z'
                    start_time: '2022-12-04T12:00:00Z'
                    frequency: 1Y
                    retries: 2
                    max_captures: 2
                    failover: false
                    capture_now: false
                    customer:
                      id: 93a0b7e4-d0ae-4da2-bdcf-c9a735e44a9a
                      email: customer@example.com
                      key: Customer Key
                      language: PT
                    method:
                      type: DD
                      status: active
                      sdd_mandate:
                        id: '50124440050'
                        billing_entity: PT16103627
                        iban: PT50002700XXXXXXXXXXX7833
                        key: Sdd Mandate key
                        name: Frequent Payment DD
                        email: customer@example.com
                        phone: '911234567'
                        account_holder: Account Name Example
                        country_code: PT
                        max_num_debits: '0'
                    currency: EUR
                    value: 17.5
                    created_at: '2022-11-22 15:29:54'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
    delete:
      tags:
        - Subscription Payment
      summary: Deletes subscription payment
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
    patch:
      tags:
        - Subscription Payment
      summary: Updates subscription payment details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Subscription Payment object to edit existing one
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  status: inactive
                  expiration_time: '2017-12-12 16:05'
                  currency: EUR
                  customer:
                    id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                    name: Customer Example
                    email: customer@example.com
                    phone: '911234567'
                    phone_indicative: '+351'
                    fiscal_number: PT123456789
                    key: Key Example
                    language: PT
                  key: Example Key
                  value: 17.5
                  max_captures: 10
                  failover: true
                  retries: 2
                  sdd_mandate:
                    id: '12345678901'
                    iban: PT50002700000001234567833
                    key: Key Example
                    name: Name Example
                    email: customer@example.com
                    phone: '911234567'
                    account_holder: Acount Name Example
                    country_code: PT
                    max_num_debits: '12'
              properties:
                status:
                  type: string
                  description: The Payment Status.
                  enum:
                    - active
                    - inactive
                  example: active
                capture:
                  type: object
                  properties:
                    transaction_key:
                      type: string
                      description: The internal key used to identify this transaction in the merchant's database.
                      maxLength: 50
                    account:
                      type: object
                      description: For multi-account clients.
                      properties:
                        id:
                          type: string
                          description: The uuid of the account.
                          format: uuid
                    descriptive:
                      type: string
                      description: The description of the capture. Will be displayed in the bank statement or in the MB WAY application.
                      maxLength: 255
                expiration_time:
                  type: string
                  description: Required only when no max_captures is set.</br>The last possible time to make the payment.
                  format: 'Y-m-d H:i'
                  example: '2017-12-12 16:05'
                currency:
                  type: string
                  enum:
                    - EUR
                    - BRL
                  example: EUR
                customer:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: The uuid of a previously created customer.
                    name:
                      type: string
                      description: The customer's name.
                      maxLength: 255
                    email:
                      type: string
                      description: The customer's e-mail.
                      maxLength: 70
                    phone:
                      type: string
                      description: The customer's phone.
                      maxLength: 15
                    phone_indicative:
                      type: string
                      maxLength: 5
                      example: '+351'
                    fiscal_number:
                      type: string
                      description: The customer's fiscal number (prefixed by the country code).
                      maxLength: 20
                      example: PT123456789
                    key:
                      type: string
                      description: The merchant's key to identify the customer.
                      example: Example Key
                      maxLength: 255
                    language:
                      type: string
                      example: PT
                      format: ISO Alpha-2 code
                key:
                  type: string
                  description: The merchant's key for identifying the payment.
                  maxLength: 50
                  example: Example Key
                value:
                  type: number
                  description: The payment value.</br>Will be rounded to 2 decimals.
                  format: double
                  minimum: 0.5
                  example: 12.55
                frequency:
                  type: string
                  enum:
                    - 1D
                    - 1W
                    - 2W
                    - 1M
                    - 2M
                    - 3M
                    - 4M
                    - 6M
                    - 1Y
                    - 2Y
                    - 3Y
                  example: 1W
                max_captures:
                  type: integer
                  description: Required when no expiration_time is set.</br>Number of payments.
                start_time:
                  type: string
                  example: '2017-12-12 16:05'
                  description: Defining the start of billing cycles.
                  format: 'Y-m-d H:i'
                failover:
                  type: boolean
                  default: false
                  description: 'After all retries failed, the payment cycle can have another try with another single method.'
                retries:
                  type: integer
                  default: 0
                  description: |-
                    Number of retries in each payment cycle.</br>
                    The chosen frequency will define the max number of possible retries.
                sdd_mandate:
                  $ref: '#/components/schemas/SddMandate'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 63f3f5a0-1543-4ed7-9b44-7f0f802ff476
                    method:
                      type: DD
                      status: inactive
                      sdd_mandate:
                        id: '50124437147'
                        billing_entity: PT16103627
                        iban: PT500027***67833
                        key: Sdd Mandate key
                        name: Fre*** DD***
                        email: cus***@example.com
                        phone: 911***522
                        account_holder: Acc*** Exa***
                        country_code: PT
                        max_num_debits: '0'
                    customer:
                      id: d927731a-8684-4aa9-bc50-f691d666c117
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
                    format: uuid
                  method:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - cc
                          - dd
                      status:
                        type: string
                        enum:
                          - waiting
                          - pending
                          - active
                          - deleted
                          - inactive
                      sdd_mandate:
                        type: object
                        properties:
                          id:
                            type: string
                          billing_entity:
                            type: string
                          iban:
                            type: string
                          key:
                            type: string
                          name:
                            type: string
                          email:
                            type: string
                          phone:
                            type: string
                          account_holder:
                            type: string
                          country_code:
                            type: string
                          max_num_debits:
                            type: string
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
              examples:
                Response:
                  value:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 63f3f5a0-1543-4ed7-9b44-7f0f802ff476
                    method:
                      type: DD
                      status: inactive
                    customer:
                      id: d927731a-8684-4aa9-bc50-f691d666c117
        '304':
          description: Not Modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-codegen-request-body-name: body
      description: ''
  /your-authorisation-notification-endpoint:
    post:
      tags:
        - Notification
      summary: Authorisation Notification
      requestBody:
        description: We will send you this json in our notification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification_Authorisation'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-codegen-request-body-name: body
  '/void/{id}':
    get:
      tags:
        - Payment Generic Operations
      summary: Shows void details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    transaction_key: key_example
                    authorisation:
                      id: 4c67e74b-a256-4e0a-965d-97bf5d01bd50
                      status: pending
                      message: message_example
                      currency: EUR
                      customer:
                        id: 22ea3cc9-424b-489a-91b7-8955f643dc93
                        name: Customer Example
                        email: customer@example.com
                        phone: '911234567'
                        phone_indicative: '+351'
                        fiscal_number: PT123456789
                        key: Key Example
                        language: PT
                      key: Example Key
                      value: 10
                      value_captured: 10
                      method:
                        type: mb
                        entity: '10611'
                        reference: '987654321'
                        url: 'https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN'
                        last_four: '1234'
                        card_type: VISA
                        expiration_date: 01/22
                        status: pending
                    status: pending
                    id: 4c67e74b-a256-4e0a-965d-97bf5d01bd50
                    descriptive: Descriptive Example
                properties:
                  transaction_key:
                    type: string
                  authorisation:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                          - success
                          - pending
                          - failed
                      message:
                        type: string
                      currency:
                        type: string
                        enum:
                          - EUR
                          - BRL
                        example: EUR
                      customer:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          email:
                            type: string
                          phone:
                            type: string
                          fiscal_number:
                            type: string
                          key:
                            type: string
                          language:
                            type: string
                      key:
                        type: string
                      value:
                        type: integer
                      value_captured:
                        type: integer
                      method:
                        type: object
                        properties:
                          type:
                            type: string
                          entity:
                            type: string
                          reference:
                            type: string
                          url:
                            type: string
                          last_four:
                            type: string
                          card_type:
                            type: string
                          expiration_date:
                            type: string
                          status:
                            type: string
                            enum:
                              - waiting
                              - pending
                              - active
                              - failed
                              - canceled
                              - deleted
                  status:
                    type: string
                    enum:
                      - success
                      - pending
                      - failed
                  id:
                    type: string
                    format: uuid
                  descriptive:
                    type: string
              examples:
                Response:
                  value:
                    status: success
                    id: 9ef96025-47e3-4007-b1a4-b6915099668b
                    transaction_key: example_key
                    descriptive: Descriptive Example
                    authorisation:
                      id: 848cb022-bc78-44e0-9b97-5d7b810a637a
                      status: success
                      message: 'Sucesso: OperaÃ§Ã£o concluÃ­da com sucesso.'
                      key: Robertos Key
                      customer:
                        id: aaaa3891-a0f1-4589-a417-56ca595815e0
                        name: Alucard
                        email: roberto@example.com
                        phone: '911234567'
                        language: PT
                      method:
                        type: MBW
                        status: active
                      currency: EUR
                      value: 200
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
    post:
      tags:
        - Payment Generic Operations
      summary: Voids a Single Auth or Frequent Auth
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Void details
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  descriptive: Descriptive Example
                  transaction_key: example_key
              properties:
                descriptive:
                  type: string
                  description: This will appear in the bank statement/mbway application.
                  maxLength: 255
                  example: descriptive_example
                transaction_key:
                  type: string
                  maxLength: 50
                  description: Your internal key identifying this void.
                  example: key_example
              required:
                - descriptive
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Properties_Has_ID:
                    $ref: '#/components/schemas/Properties_Has_ID'
                  StatusDetails:
                    $ref: '#/components/schemas/StatusDetails'
              examples:
                Response:
                  value:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 9ef96025-47e3-4007-b1a4-b6915099668b
            application/xml:
              example: |-
                <response>
                   <status>ok</status>
                   <message>
                      <string>Your request was successfully created</string>
                   </message>
                   <id>3dc66505-3117-4b62-b2b7-814aec7f0e84</id>
                </response>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-code-samples:
        - lang: PHP
          source: |-
            $id = "dc835144-1f7d-4a55-a5d5-c6617f990c7b"

            $body = [
                "transaction_key" => "Void Key Example",
                "descriptive" => "Descriptive Example",
            ];

            $headers = [
                "AccountId: 5fe2e102-dfee-4880-bd87-1d9a6ec6fdd2",
                "ApiKey: b0ea270d-9f50-4bbc-af58-44fed3df4b2b",
                'Content-Type: application/json',
            ];

            $url = "https://api.prod.easypay.pt/2.0/void/" . $id

            $curlOpts = [
                CURLOPT_URL => $url,
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_POST => 1,
                CURLOPT_TIMEOUT => 60,
                CURLOPT_POSTFIELDS => json_encode($body),
                CURLOPT_HTTPHEADER => $headers,
            ];

            $curl = curl_init();
            curl_setopt_array($curl, $curlOpts);
            $response_body = curl_exec($curl);
            curl_close($curl);
            $response = json_decode($response_body, true);
        - lang: CURL
          source: |
            curl -XPOST -H "AccountId: 5fe2e102-dfee-4880-bd87-1d9a6ec6fdd2" -H "ApiKey: b0ea270d-9f50-4bbc-af58-44fed3df4b2b" \
            -d '{"transaction_key": "Void Key Example","descriptive": "Descriptive Example"}' \
            https://api.prod.easypay.pt/2.0/void/dc835144-1f7d-4a55-a5d5-c6617f990c7b
      x-codegen-request-body-name: body
  /report/transactions:
    get:
      tags:
        - Reports
      summary: Report Transactions
      description: List your transactions
      parameters:
        - name: start_date
          in: query
          description: Filter from this date
          schema:
            type: string
            format: 'Y-m-d H:i'
        - name: end_date
          in: query
          description: Filter until this date
          schema:
            type: string
            format: 'Y-m-d H:i'
        - name: page
          in: query
          description: Page Number
          schema:
            type: number
        - name: records_per_page
          in: query
          description: 'Limit records per page (Max: 2500)'
          schema:
            type: number
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    meta:
                      page:
                        current: 1
                        total: 47
                      records:
                        total: 231
                        per_page: 5
                      links:
                        first: '?page=1'
                        prev: ''
                        next: '?page=2'
                        last: '?page=47'
                    data:
                      - id: b41921f1-a255-41bc-9e92-9a28d266d378
                        key: Merchant identification key
                        date: '2022-11-16T16:45:19Z'
                        values:
                          requested: 44
                          paid: 44
                          fixed_fee: 0.25
                          variable_fee: 0.66
                          tax: 1.5
                          transfer: 42.88
                        transfer_date: '2022-11-21T00:00:00Z'
                        transfer_batch: ''
                        method: dd
                        document_number: MARCEL0208220452011220221116164519
                        payment_type: single
                        payment_id: 2a9112fe-6510-4366-b55e-24a3ae188d67
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Merchant identification key
                        payment_transaction_key: Merchant identification key
                        descriptive: Descriptive Josefa
                      - id: b3fad7da-69bf-4320-b3ad-ccfaecaf8d16
                        key: Robertos Key
                        date: '2022-11-16T11:46:58Z'
                        values:
                          requested: 100
                          paid: 100
                          fixed_fee: 0
                          variable_fee: 0
                          tax: 0
                          transfer: 100
                        transfer_date: '2022-11-18T00:00:00Z'
                        transfer_batch: ''
                        method: mbw
                        document_number: MARCEL0208220451979520221116114658
                        payment_type: single
                        payment_id: 0cccc05d-1964-4648-a32b-fe7107746881
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Robertos Key
                        payment_transaction_key: ''
                        descriptive: Description of Roberto
                      - id: 65196366-3afe-45b6-be79-0f1025c9e2d5
                        key: Merchant identification key
                        date: '2022-11-15T10:06:19Z'
                        values:
                          requested: 44
                          paid: 44
                          fixed_fee: 0.25
                          variable_fee: 0.66
                          tax: 1.5
                          transfer: 42.88
                        transfer_date: '2022-11-17T00:00:00Z'
                        transfer_batch: ''
                        method: dd
                        document_number: MARCEL0208220451822420221115100619
                        payment_type: single
                        payment_id: 8798e233-43c8-4a73-8e24-e440a083b157
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Merchant identification key
                        payment_transaction_key: Merchant identification key
                        descriptive: Descriptive Josefa
                      - id: a03c6452-ae7a-4495-993d-b6608d999edb
                        key: Merchant identification key
                        date: '2022-11-15T10:06:19Z'
                        values:
                          requested: 44
                          paid: 44
                          fixed_fee: 0.25
                          variable_fee: 0.66
                          tax: 1.5
                          transfer: 42.88
                        transfer_date: '2022-11-17T00:00:00Z'
                        transfer_batch: ''
                        method: dd
                        document_number: MARCEL0208220451822320221115100619
                        payment_type: single
                        payment_id: b81d392b-b0d0-47ae-b76a-94ded2de404b
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Merchant identification key
                        payment_transaction_key: Merchant identification key
                        descriptive: Descriptive Josefa
                      - id: 5b145b82-8ff1-4caf-bb5e-f72dccfff376
                        key: Merchant identification key
                        date: '2022-11-15T10:06:19Z'
                        values:
                          requested: 44
                          paid: 44
                          fixed_fee: 0.25
                          variable_fee: 0.66
                          tax: 1.5
                          transfer: 42.88
                        transfer_date: '2022-11-17T00:00:00Z'
                        transfer_batch: ''
                        method: dd
                        document_number: MARCEL0208220451822220221115100619
                        payment_type: single
                        payment_id: e605e589-ccf8-4739-8fdb-8502a609bda4
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Merchant identification key
                        payment_transaction_key: Merchant identification key
                        descriptive: Descriptive Josefa
                properties:
                  meta:
                    type: object
                    properties:
                      page:
                        type: object
                        properties:
                          current:
                            type: integer
                          total:
                            type: integer
                      records:
                        type: object
                        properties:
                          total:
                            type: integer
                          per_page:
                            type: integer
                      links:
                        type: object
                        properties:
                          first:
                            type: string
                          prev:
                            type: string
                          next:
                            type: string
                          last:
                            type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        key:
                          type: string
                          description: Any value that will help the merchant manage the transaction on his database.
                        date:
                          type: string
                          format: 'Y-m-d H:i:s'
                        values:
                          type: object
                          properties:
                            requested:
                              type: integer
                            paid:
                              type: integer
                            fixed_fee:
                              type: number
                            variable_fee:
                              type: number
                            tax:
                              type: number
                            transfer:
                              type: number
                        transfer_date:
                          type: string
                          format: Y-m-d
                        transfer_batch:
                          type: string
                          description: The batch where this transaction has transfered.
                        method:
                          type: string
                          description: The payment method.
                        document_number:
                          type: string
                          description: Unique document number used for Easypay Invoice.
                        payment_type:
                          type: string
                          enum:
                            - single
                            - frequent
                            - subscription
                          example: single
                        payment_id:
                          type: string
                          format: uuid
                        payment_account:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                        payment_key:
                          type: string
                        payment_transaction_key:
                          type: string
                          description: Capture transaction key.
                        descriptive:
                          type: string
                          description: Any descriptive information that will help the merchant manage the transaction on his database.
              examples:
                Response:
                  value:
                    meta:
                      page:
                        current: 1
                        total: 47
                      records:
                        total: 231
                        per_page: 5
                      links:
                        first: '?page=1'
                        prev: ''
                        next: '?page=2'
                        last: '?page=47'
                    data:
                      - id: b41921f1-a255-41bc-9e92-9a28d266d378
                        key: Merchant identification key
                        date: '2022-11-16T16:45:19Z'
                        values:
                          requested: 44
                          paid: 44
                          fixed_fee: 0.25
                          variable_fee: 0.66
                          tax: 1.5
                          transfer: 42.88
                        transfer_date: '2022-11-21T00:00:00Z'
                        transfer_batch: ''
                        method: dd
                        document_number: MARCEL0208220452011220221116164519
                        payment_type: single
                        payment_id: 2a9112fe-6510-4366-b55e-24a3ae188d67
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Merchant identification key
                        payment_transaction_key: Merchant identification key
                        descriptive: Descriptive Josefa
                      - id: b3fad7da-69bf-4320-b3ad-ccfaecaf8d16
                        key: Robertos Key
                        date: '2022-11-16T11:46:58Z'
                        values:
                          requested: 100
                          paid: 100
                          fixed_fee: 0
                          variable_fee: 0
                          tax: 0
                          transfer: 100
                        transfer_date: '2022-11-18T00:00:00Z'
                        transfer_batch: ''
                        method: mbw
                        document_number: MARCEL0208220451979520221116114658
                        payment_type: single
                        payment_id: 0cccc05d-1964-4648-a32b-fe7107746881
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Robertos Key
                        payment_transaction_key: ''
                        descriptive: Description of Roberto
                      - id: 65196366-3afe-45b6-be79-0f1025c9e2d5
                        key: Merchant identification key
                        date: '2022-11-15T10:06:19Z'
                        values:
                          requested: 44
                          paid: 44
                          fixed_fee: 0.25
                          variable_fee: 0.66
                          tax: 1.5
                          transfer: 42.88
                        transfer_date: '2022-11-17T00:00:00Z'
                        transfer_batch: ''
                        method: dd
                        document_number: MARCEL0208220451822420221115100619
                        payment_type: single
                        payment_id: 8798e233-43c8-4a73-8e24-e440a083b157
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Merchant identification key
                        payment_transaction_key: Merchant identification key
                        descriptive: Descriptive Josefa
                      - id: a03c6452-ae7a-4495-993d-b6608d999edb
                        key: Merchant identification key
                        date: '2022-11-15T10:06:19Z'
                        values:
                          requested: 44
                          paid: 44
                          fixed_fee: 0.25
                          variable_fee: 0.66
                          tax: 1.5
                          transfer: 42.88
                        transfer_date: '2022-11-17T00:00:00Z'
                        transfer_batch: ''
                        method: dd
                        document_number: MARCEL0208220451822320221115100619
                        payment_type: single
                        payment_id: b81d392b-b0d0-47ae-b76a-94ded2de404b
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Merchant identification key
                        payment_transaction_key: Merchant identification key
                        descriptive: Descriptive Josefa
                      - id: 5b145b82-8ff1-4caf-bb5e-f72dccfff376
                        key: Merchant identification key
                        date: '2022-11-15T10:06:19Z'
                        values:
                          requested: 44
                          paid: 44
                          fixed_fee: 0.25
                          variable_fee: 0.66
                          tax: 1.5
                          transfer: 42.88
                        transfer_date: '2022-11-17T00:00:00Z'
                        transfer_batch: ''
                        method: dd
                        document_number: MARCEL0208220451822220221115100619
                        payment_type: single
                        payment_id: e605e589-ccf8-4739-8fdb-8502a609bda4
                        payment_account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        payment_key: Merchant identification key
                        payment_transaction_key: Merchant identification key
                        descriptive: Descriptive Josefa
            application/xml:
              schema:
                type: object
                properties:
                  Properties_Has_ListMetaData:
                    $ref: '#/components/schemas/Properties_Has_ListMetaData'
              example: |-
                <report>
                   <meta>
                      <page>
                         <current>1</current>
                         <total>196</total>
                      </page>
                      <records>
                         <total>196</total>
                         <per_page>2</per_page>
                      </records>
                      <links>
                         <first>?page=1</first>
                         <prev></prev>
                         <next>?page=2</next>
                         <last>?page=196</last>
                      </links>
                   </meta>
                   <data>
                      <transaction>
                         <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                         <key>Example Key</key>
                         <date>2019-05-03T15:18:04Z</date>
                         <values>
                            <requested>20</requested>
                            <paid>20</paid>
                            <fixed_fee>0</fixed_fee>
                            <variable_fee>0</variable_fee>
                            <tax>0</tax>
                            <transfer>20</transfer>
                         </values>
                         <transfer_date>2019-05-03T00:00:00Z</transfer_date>
                         <method>mb</method>
                         <document_number>TESTE12308267487210000000</document_number>
                         <payment_type>single</payment_type>
                         <payment_id>ace99c76-5292-4518-8bee-3c09d5ee067d</payment_id>
                         <payment_account>
                            <id>22ea3cc9-424b-489a-91b7-8955f643dc93</id>
                         </payment_account>
                         <payment_key>Example Key</payment_key>
                         <payment_transaction_key>Example Transaction Key</payment_transaction_key>
                         <descriptive>Descriptive Example</descriptive>
                      </transaction>
                   </data>
                </report>
            text/csv:
              schema:
                type: object
                properties:
                  Properties_Has_ListMetaData:
                    $ref: '#/components/schemas/Properties_Has_ListMetaData'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusFailed'
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
            text/csv:
              schema:
                $ref: '#/components/schemas/StatusFailed'
      x-code-samples:
        - lang: CURL
          source: |
            curl -XGET -H "AccountId: 5fe2e102-dfee-4880-bd87-1d9a6ec6fdd2" -H "ApiKey: b0ea270d-9f50-4bbc-af58-44fed3df4b2b" \
            -G --data-urlencode "start_date=2019-01-07 15:10" --data-urlencode "end_date=2019-02-05 15:14" --data-urlencode "page=1" --data-urlencode "records_per_page=10" \
            https://api.prod.easypay.pt/2.0/report/transactions
  /out_payment:
    get:
      tags:
        - Out Payment
      summary: Lists out payments
      description: Full report with all the out payments from your Account Id
      parameters:
        - name: page
          in: query
          description: Page Number
          schema:
            type: number
        - name: records_per_page
          in: query
          description: 'Limit records per page (Max: 100)'
          schema:
            type: number
            default: 20
        - name: type
          in: query
          description: Filter by type
          schema:
            type: string
        - name: method
          in: query
          description: Filter by method
          schema:
            type: string
        - name: id
          in: query
          description: Filter by id
          schema:
            type: string
        - name: key
          in: query
          description: Filter by out payment key
          schema:
            type: string
        - name: value
          in: query
          description: Filter by value
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    meta:
                      page:
                        current: 1
                        total: 0
                      records:
                        total: 0
                        per_page: 1
                      links:
                        first: '?page=1'
                        prev: ''
                        next: ''
                        last: '?page=0'
                    data:
                      - id: 20efcd82-be96-4aa0-89a1-c6365633a72e
                        status: success
                        type: normal
                        method: transfer
                        customer:
                          id: 09dbe8e2-5703-401e-9adc-6317f67a4fd9
                        account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        out_account:
                          id: bcd387ca-1835-4c95-9003-2da45f39e396
                        key: ''
                        value: 50
                        schedule_at: '2022-09-15 20:28:58'
                        transactions:
                          - id: 20efcd82-be96-4aa0-89a1-c6365633a72e
                            key: ''
                            date: '2022-09-15T21:28:58Z'
                            values:
                              requested: -50
                              paid: -50
                              fixed_fee: 1
                              variable_fee: 0
                              tax: 0.23
                              transfer: -51.23
                            transfer_date: '2022-09-15T00:00:00Z'
                            transfer_batch: null
                            method: transfer
                            document_number: MARCEL0208220435165820220915212858
                            descriptive: null
                        created_at: '2022-09-15 20:28:58'
                        timestamp: ''
                      - id: 12f21a3c-52a6-4274-ad1e-5e774093f7dd
                        status: success
                        type: normal
                        method: transfer
                        customer:
                          id: b586685e-4e56-472b-b469-9b365c62d223
                        account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        out_account:
                          id: 898d3a41-8013-4262-a432-0bd09e301dff
                        key: ''
                        value: 50
                        schedule_at: '2022-09-16 08:03:25'
                        transactions:
                          - id: 12f21a3c-52a6-4274-ad1e-5e774093f7dd
                            key: ''
                            date: '2022-09-16T09:03:27Z'
                            values:
                              requested: -50
                              paid: -50
                              fixed_fee: 1
                              variable_fee: 0
                              tax: 0.23
                              transfer: -51.23
                            transfer_date: '2022-09-16T00:00:00Z'
                            transfer_batch: null
                            method: transfer
                            document_number: MARCEL0208220435236620220916090327
                            descriptive: null
                        created_at: '2022-09-16 08:03:27'
                        timestamp: ''
                properties:
                  meta:
                    type: object
                    properties:
                      page:
                        type: object
                        properties:
                          current:
                            type: integer
                          total:
                            type: integer
                      records:
                        type: object
                        properties:
                          total:
                            type: integer
                          per_page:
                            type: integer
                      links:
                        type: object
                        properties:
                          first:
                            type: string
                          prev:
                            type: string
                          next:
                            type: string
                          last:
                            type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                        method:
                          type: string
                        customer:
                          type: object
                          properties:
                            id:
                              type: string
                        account:
                          type: object
                          properties:
                            id:
                              type: string
                        out_account:
                          type: object
                          properties:
                            id:
                              type: string
                        key:
                          type: string
                        value:
                          type: integer
                        schedule_at:
                          type: string
                        transactions:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              key:
                                type: string
                              date:
                                type: string
                              values:
                                type: object
                                properties:
                                  requested:
                                    type: integer
                                  paid:
                                    type: integer
                                  fixed_fee:
                                    type: integer
                                  variable_fee:
                                    type: integer
                                  tax:
                                    type: number
                                  transfer:
                                    type: number
                              transfer_date:
                                type: string
                              transfer_batch:
                                type: string
                              method:
                                type: string
                              document_number:
                                type: string
                              descriptive:
                                type: string
                        created_at:
                          type: string
                        timestamp:
                          type: string
              examples:
                Response:
                  value:
                    meta:
                      page:
                        current: 1
                        total: 0
                      records:
                        total: 0
                        per_page: 1
                      links:
                        first: '?page=1'
                        prev: ''
                        next: '?page=2'
                        last: '?page=0'
                    data:
                      - id: 20efcd82-be96-4aa0-89a1-c6365633a72e
                        status: success
                        type: normal
                        method: transfer
                        customer:
                          id: 09dbe8e2-5703-401e-9adc-6317f67a4fd9
                        account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        out_account:
                          id: bcd387ca-1835-4c95-9003-2da45f39e396
                        key: ''
                        value: 50
                        schedule_at: '2022-09-15 20:28:58'
                        transactions:
                          - id: 20efcd82-be96-4aa0-89a1-c6365633a72e
                            key: ''
                            date: '2022-09-15T21:28:58Z'
                            values:
                              requested: -50
                              paid: -50
                              fixed_fee: 1
                              variable_fee: 0
                              tax: 0.23
                              transfer: -51.23
                            transfer_date: '2022-09-15T00:00:00Z'
                            transfer_batch: ''
                            method: transfer
                            document_number: MARCEL0208220435165820220915212858
                            descriptive: ''
                        created_at: '2022-09-15 20:28:58'
                        timestamp: ''
                      - id: 12f21a3c-52a6-4274-ad1e-5e774093f7dd
                        status: success
                        type: normal
                        method: transfer
                        customer:
                          id: b586685e-4e56-472b-b469-9b365c62d223
                        account:
                          id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                        out_account:
                          id: 898d3a41-8013-4262-a432-0bd09e301dff
                        key: ''
                        value: 50
                        schedule_at: '2022-09-16 08:03:25'
                        transactions:
                          - id: 12f21a3c-52a6-4274-ad1e-5e774093f7dd
                            key: ''
                            date: '2022-09-16T09:03:27Z'
                            values:
                              requested: -50
                              paid: -50
                              fixed_fee: 1
                              variable_fee: 0
                              tax: 0.23
                              transfer: -51.23
                            transfer_date: '2022-09-16T00:00:00Z'
                            transfer_batch: ''
                            method: transfer
                            document_number: MARCEL0208220435236620220916090327
                            descriptive: ''
                        created_at: '2022-09-16 08:03:27'
                        timestamp: ''
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
    post:
      tags:
        - Out Payment
      summary: Create out payment
      description: 'Get your strong authentication RSA private key from Easypay Backoffice on menu:</br>Web Services->Configuration API 2.0->Keys.'
      parameters:
        - name: Signature
          in: header
          description: RSA signature Base64 generated with algorithm SHA256 using a account strong authentication private Key on the raw body or id
          required: true
          schema:
            type: string
      requestBody:
        description: Payment configuration object to generate a payment
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Payment_OutPayment_Base'
                - $ref: '#/components/schemas/Payment_OutPayment_Method_Request'
                - $ref: '#/components/schemas/Properties_Has_OutType'
                - $ref: '#/components/schemas/Properties_Has_Descriptive'
                - $ref: '#/components/schemas/Properties_Has_Timestamp'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 341ef1e0-b53c-4d8c-9669-59a24038bcab
                    method:
                      type: transfer
                      status: pending
                    customer:
                      id: 5caa8d83-2e0e-4e2d-8fed-5e8612124a24
                    out_account:
                      id: e508ff3f-33e7-43ce-934d-62d4ee34cd95
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: array
                    items:
                      type: string
                      example: Your request was successfully created
                  id:
                    type: string
                    format: uuid
                  method:
                    type: object
                    properties:
                      type:
                        type: string
                        default: transfer
                      status:
                        type: string
                        example: pending
                        enum:
                          - pending
                          - delayed
                          - success
                          - deleted
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                  out_account:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-code-samples:
        - lang: PHP
          source: "$body = [\n    \"key\" => \"Key Example\",\n    \"method\" => \"transfer\",\n    \"type\"\t=> \"normal\",\n    \"value\"\t=> floatval(17.50),\n    \"schedule_at\" =>\"2018-12-31 12:00\",\n    \"account\" => [\n        \"id\" => \"22ea3cc9-424b-489a-91b7-8955f643dc93\",\n    ],\n    \"customer\" => [\n        \"name\" => \"Customer Example\",\n        \"email\" => \"customer@example.com\",\n        \"key\" => \"Key Example\",\n        \"phone_indicative\" => \"+351\",\n        \"phone\" => \"911234567\",\n        \"fiscal_number\" =>\"PT123456789\",\n    ],\n    \"out_account\" => [\n        \"name\" => \"Name Example\",\n        \"email\" => \"sdd_email@example.com\",\n        \"account_holder\" => \"Account Holder Example\",\n        \"key\" => \"SDD Key Example\",\n        \"iban\" => \"PT50002700000001234567833\",\n        \"phone\" => \"911234567\",\n        \"max_num_debits\" =>\"12\",\n    ],\n    \"timestamp\" => (string)time()\n];\n\n$private = <<<PRIVATE\n-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEA6qYjzhYlveoAy9gQsHrzjFMqDV6vL7qBvO7EWV/KCFrBlAmP\nV7ZQYyZ9leS/iZXp2GWeKf6djLAkjY9Z/BkNrNccLbVKCaUqlPMaRG83YOYNRWHZ\n5uzxX4e3KgEdIq5PTFVbloWCk4GqUO1LSq9ES0yC5GRvqeWDvcqrZh+SFMPKj0B3\nyVEvjgwStIlJoamcQt330z4yPGs03q+VRaHFx8bFQdp21M4fY826lKlijEMPeB09\nexS3yzlCobDutLayUSJlb0abAEYMCNqDoEilqrnTvYYD9nNOyZJNZ913UrxSjNdb\n8zoMaixKZze7hR4MLkzNALZLAQUf7RFhXpcMLQIDAQABAoIBAQDSYnPn62Obi5t7\nKRaNpS+IuWgS5LoeCRMZ2tqhZ4k1RGob2RZ0hjo9K92d76LsMUWhiDrvXCLWaXfc\nlJMRvUTNm3DgapMfYr9zHSSIB0+XyaxMcRd2PSuNg5luR+Ffnvnqbv3XT41rw+54\n8Ml5BPwup0MUlBiqM+aS3Iwg3F2Vzt7iVMy3haHAUgbaErFymlzSyJRGiVRP3d6X\nkfBjW3i4ZofFK2hXoTdv1adCrhsDfhN67x7zPtGyFaThZ2ZgeQbYVfUvQSrD25cX\nb8AQwMM93W+cccks/1Ex43I9Ajl6KrAB6nhYBXAlVxGdF2nFFAIeTU0AigLixotR\ns5fL0HPhAoGBAPcn/eAom9iP5t0cTxsL+w4m1qvhEQSD+pg/cxlX8fMKPDOz60Vj\nMnEH38PryRQpAfRwgS1bWP/xBHCfCev9QmQ7g9oGXBlzBk/jHz6iT+kbM/2Fq4/0\n6nZ5NStiqlWKTYGUdiUCd483clE0MDSWR96ksWaSjx1w7iLgXgs8UeA7AoGBAPML\nlDlCl+IIaSSIiVG6nDCTInySGG2jB75w8sTRt6XDJ+6Y+Bd27xcFHy5I3arY80gp\nKY+A8yYXKxDbCj1pJApA2gzwJ8Ucb1UJgU9gUzL/0XrtpNLiBlNyU2z0IwlC/reu\naNZ0aV4YuqPk8+jROIDluk0ICUI10AjmFmJM5Sa3AoGBAJ6ccZaLOQiPwO6hHjsT\nQzhfwGBpfYxSTl2qSmk3QTRhmyTrD89ly5cyIG4RQOfJMVH3aU78Um9d8yV7StjB\nnPvKHeGrNyu135UhAooli/bi2EiYofMuj9EcE/0Vwo5GxVqlNfSmUqf8Q0bNoSn+\nT30YYCidYW7ZbFnBd1jqivjFAoGBAOdGPm7acqMRM9Qi5ODTvWrvp+J4Nyyk9WqA\nGlO16JahBW+jOnlBoLP8GLa3ec/okGA7YyP+JeI6K63ncXAMi9IB8jxbjsyfiUWX\nPOhmleUyz4i1eKF/mVtwr/g+vNREXxQ0r+hacCWtTHVHGd6SsLzfXg+NNRo/EM5W\n/DfgSjIzAoGAbWRUTaX9jcb9NQDMtXuUM5PoUfA7yDJl0K7oL6G6jOtcXnVfTtHG\n00MnWn6yt227CYOB0lnd+F2wL64pdmcJnlvO+Gtq5pw4NmGcZadUWj3jcZbkyxMu\noLOfKIfyBPOUNWCosoGjPXVvgpIFrHFWJt6Rl7gjSqoXaeKlzEqZiv0=\n-----END RSA PRIVATE KEY-----\nPRIVATE;\n\n$encoded_body = json_encode($body);\n\n$pkeyid = openssl_pkey_get_private($private);\n\nopenssl_sign($encoded_body, $signature, $pkeyid, OPENSSL_ALGO_SHA256);\n\n$headers = [\n    \"AccountId: 5fe2e102-dfee-4880-bd87-1d9a6ec6fdd2\",\n    \"ApiKey: b0ea270d-9f50-4bbc-af58-44fed3df4b2b\",\n    \"Signature: \" . base64_encode($signature),\n    'Content-Type: application/json',\n];\n\n$curlOpts = [\n    CURLOPT_URL => \"https://api.prod.easypay.pt/2.0/out_payment\",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_POST => 1,\n    CURLOPT_TIMEOUT => 60,\n    CURLOPT_POSTFIELDS => $encoded_body,\n    CURLOPT_HTTPHEADER => $headers,\n];\n\n$curl = curl_init();\ncurl_setopt_array($curl, $curlOpts);\n$response_body = curl_exec($curl);\ncurl_close($curl);\n$response = json_decode($response_body, true);\n"
  '/out_payment/{id}':
    get:
      tags:
        - Out Payment
      summary: Shows out payment details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    id: 760d105e-950d-4b41-8017-cad840ca3baa
                    status: success
                    type: normal
                    method: transfer
                    descriptive: descriptive
                    customer:
                      id: 7e47c256-4bea-41a8-b578-727d60004c7a
                    account:
                      id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                    out_account:
                      id: 343a8a78-8deb-4d4a-aa41-0a9140c95346
                    key: Example Key
                    value: 1
                    schedule_at: '2022-11-25 10:30:11'
                    transactions:
                      - id: 760d105e-950d-4b41-8017-cad840ca3baa
                        key: Example Key
                        date: '2022-11-25T10:30:14Z'
                        values:
                          requested: -1
                          paid: -1
                          fixed_fee: 1
                          variable_fee: 0
                          tax: 0.23
                          transfer: -2.23
                        transfer_date: '2022-11-25T00:00:00Z'
                        transfer_batch: ''
                        method: transfer
                        document_number: MARCEL0208220453362220221125103014
                        descriptive: ''
                    created_at: '2022-11-25 10:30:14'
                properties:
                  id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum:
                      - success
                      - delayed
                      - pending
                      - deleted
                  type:
                    type: string
                    default: transfer
                  method:
                    type: string
                  descriptive:
                    type: string
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                  account:
                    type: object
                    properties:
                      id:
                        type: string
                  out_account:
                    type: object
                    properties:
                      id:
                        type: string
                  key:
                    type: string
                  value:
                    type: number
                    format: double
                  schedule_at:
                    type: string
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        key:
                          type: string
                        date:
                          type: string
                        values:
                          type: object
                          properties:
                            requested:
                              type: integer
                            paid:
                              type: integer
                            fixed_fee:
                              type: integer
                            variable_fee:
                              type: integer
                            tax:
                              type: number
                            transfer:
                              type: number
                        transfer_date:
                          type: string
                        transfer_batch:
                          type: string
                        method:
                          type: string
                        document_number:
                          type: string
                        descriptive:
                          type: string
                  created_at:
                    type: string
              examples:
                Response:
                  value:
                    id: 760d105e-950d-4b41-8017-cad840ca3baa
                    status: success
                    type: normal
                    method: transfer
                    descriptive: descriptive
                    customer:
                      id: 7e47c256-4bea-41a8-b578-727d60004c7a
                    account:
                      id: 76f190b9-2b8a-4bd0-9490-411241a9dc81
                    out_account:
                      id: 343a8a78-8deb-4d4a-aa41-0a9140c95346
                    key: Example Key
                    value: 1
                    schedule_at: '2022-11-25 10:30:11'
                    transactions:
                      - id: 760d105e-950d-4b41-8017-cad840ca3baa
                        key: Example Key
                        date: '2022-11-25T10:30:14Z'
                        values:
                          requested: -1
                          paid: -1
                          fixed_fee: 1
                          variable_fee: 0
                          tax: 0.23
                          transfer: -2.23
                        transfer_date: '2022-11-25T00:00:00Z'
                        transfer_batch: ''
                        method: transfer
                        document_number: MARCEL0208220453362220221125103014
                        descriptive: ''
                    created_at: '2022-11-25 10:30:14'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
    delete:
      tags:
        - Out Payment
      summary: Deletes out payment
      description: 'If the payment is not processed, it will be cancelled. </br> Get your strong authentication RSA private key from Easypay Backoffice on menu: </br> Web Services->Configuration API 2.0->Keys.'
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
  /your-notification-endpoint:
    post:
      tags:
        - Notification
      summary: Transaction Notification
      requestBody:
        description: We will send you this json in our notification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification_Capture'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-codegen-request-body-name: body
  '/refund/{id}':
    get:
      tags:
        - Payment Generic Operations
      summary: Shows refund details
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    id: 4db3d9ab-f4c0-41a6-a80e-6cbbdd1508f4
                    status: success
                    transaction_key: internal key identifying this refund
                    value: 50
                    account_holder: Account Name Example
                    email: customer@example.com
                    phone: '911234567'
                    iban: PT50002700000001234567833
                properties:
                  id:
                    type: string
                  status:
                    type: string
                    enum:
                      - waiting
                      - pending
                      - success
                      - failed
                  transaction_key:
                    type: string
                  value:
                    type: integer
                  account_holder:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  iban:
                    type: string
              examples:
                Response:
                  value:
                    id: 4db3d9ab-f4c0-41a6-a80e-6cbbdd1508f4
                    status: success
                    transaction_key: internal key identifying this refund
                    value: 50
                    account_holder: Account Name Example
                    email: customer@example.com
                    phone: '911234567'
                    iban: PT50002700000001234567833
            application/xml:
              example: |-
                <refund>
                   <account_holder>Account Name Example</account_holder>
                   <email>customer@example.com</email>
                   <iban>PT50002700000001234567833</iban>
                   <id>4c67e74b-a256-4e0a-965d-97bf5d01bd50</id>
                   <phone>911234567</phone>
                   <status>success</status>
                   <transaction_key>string</transaction_key>
                   <value>17.5</value>
                </refund>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
    post:
      tags:
        - Payment Generic Operations
      summary: Refunds a Single Transaction or Frequent Transaction
      parameters:
        - name: id
          in: path
          description: Resource Identification
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Refund details
        content:
          application/json:
            schema:
              required:
                - value
              type: object
              properties:
                transaction_key:
                  maxLength: 50
                  type: string
                  description: Your internal key identifying this refund
                iban:
                  maxLength: 34
                  type: string
                  description: Optional - Iban from the bank account
                  example: PT50002700000001234567833
                email:
                  maxLength: 50
                  type: string
                  description: Optional - Email from the bank account holder
                  example: customer@example.com
                phone:
                  maxLength: 20
                  type: string
                  description: Optional - Phone from the bank account holder
                  example: '911234567'
                account_holder:
                  maxLength: 100
                  type: string
                  description: Optional - Bank account holder name
                  example: Account Name Example
                value:
                  minimum: 0
                  exclusiveMinimum: true
                  type: number
                  description: Value will be rounded to 2 decimals
                  format: double
                  example: 17.5
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Properties_Has_ID:
                    $ref: '#/components/schemas/Properties_Has_ID'
                  StatusDetails:
                    $ref: '#/components/schemas/StatusDetails'
              examples:
                Response:
                  value:
                    status: ok
                    message:
                      - Your request was successfully created
                    id: 5e2fee01-71e8-47e1-896a-3e2153222afd
            application/xml:
              example: |-
                <response>
                   <status>ok</status>
                   <message>
                      <string>Your request was successfully created</string>
                   </message>
                   <id>3dc66505-3117-4b62-b2b7-814aec7f0e84</id>
                </response>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusFailed'
            application/xml:
              example: |-
                <response>
                   <status>error</status>
                   <message>
                      <string>Custom error message</string>
                   </message>
                </response>
      x-code-samples:
        - lang: PHP
          source: |-
            $id = "dc835144-1f7d-4a55-a5d5-c6617f990c7b"

            $body = [
                "transaction_key" =>" RefundKeyExample",
                "value" => floatval(17.50),
                "iban" => "PT50002700000001234567833",
                "email" => "customer@example.com",
                "phone" => "911234567",
                "account_holder" => "AccountNameExample",
            ];

            $headers = [
                "AccountId: 5fe2e102-dfee-4880-bd87-1d9a6ec6fdd2",
                "ApiKey: b0ea270d-9f50-4bbc-af58-44fed3df4b2b",
                'Content-Type: application/json',
            ];

            $url = "https://api.prod.easypay.pt/2.0/refund/" . $id

            $curlOpts = [
                CURLOPT_URL => $url,
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_POST => 1,
                CURLOPT_TIMEOUT => 60,
                CURLOPT_POSTFIELDS => json_encode($body),
                CURLOPT_HTTPHEADER => $headers,
            ];

            $curl = curl_init();
            curl_setopt_array($curl, $curlOpts);
            $response_body = curl_exec($curl);
            curl_close($curl);
            $response = json_decode($response_body, true);
        - lang: CURL
          source: |
            curl -XPOST -H "AccountId: 5fe2e102-dfee-4880-bd87-1d9a6ec6fdd2" -H "ApiKey: b0ea270d-9f50-4bbc-af58-44fed3df4b2b" \
            -d '{"transaction_key": "RefundKeyExample","iban": "PT50002700000001234567833","value" : 17.50,"email": "customer@example.com","phone": "911234567","account_holder": "AccountNameExample","account": {"id":"22ea3cc9-424b-489a-91b7-8955f643dc93"}}' \
            https://api.prod.easypay.pt/2.0/refund/dc835144-1f7d-4a55-a5d5-c6617f990c7b
      x-codegen-request-body-name: body
components:
  schemas:
    Response_Bulk:
      allOf:
        - $ref: '#/components/schemas/StatusDetails'
        - $ref: '#/components/schemas/Properties_Has_ReportID'
    Response_Report:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Report_DetailsFull'
    Response_MinimalOutput_OutPayment:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Payment_OutPayment_Method_Response'
        - $ref: '#/components/schemas/Properties_Has_CustomerID'
    Response_MinimalOutput_Subscription:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Payment_Subscription_Method_Response'
        - $ref: '#/components/schemas/Properties_Has_CustomerID'
    Response_MinimalOutput_Recurring:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Payment_Recurring_Method_Response'
        - $ref: '#/components/schemas/Properties_Has_CustomerID'
    Response_MinimalOutput_Frequent:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Payment_Frequent_Method_Response'
        - $ref: '#/components/schemas/Properties_Has_CustomerID'
    Response_MinimalOutput_Single:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Payment_Single_Method_Response'
        - $ref: '#/components/schemas/Properties_Has_CustomerID'
      title: ''
    Report:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
    PaymentMethod_Properties_Status_Pending:
      type: object
      properties:
        status:
          type: string
          example: pending
    PaymentMethod_Properties_Status:
      type: object
      title: ''
      properties:
        status:
          type: string
          example: pending
          enum:
            - waiting
            - pending
            - active
            - deleted
    PaymentMethod_Force3DS:
      type: object
      properties:
        type:
          type: string
          example: CC
        url:
          type: string
          format: url
          example: 'https://cc.easypay.pt/3ds/v2.0/7018c8ce-1d79-4c47-97e1-1bbe8d6cceee'
    PaymentMethod_Pending:
      allOf:
        - $ref: '#/components/schemas/PaymentMethod_Base'
        - $ref: '#/components/schemas/PaymentMethod_Properties_Status_Pending'
    PaymentMethod_Base:
      type: object
      properties:
        entity:
          type: integer
          example: 10611
        reference:
          type: string
          example: '987654321'
        url:
          type: string
          format: url
          example: 'https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN'
        last_four:
          type: string
          description: Last 4 digits of the  submitted Credit Card
          example: '1234'
        card_type:
          type: string
          description: 'MasterCard, VISA'
          example: VISA
        expiration_date:
          type: string
          format: mm/yy
          example: 01/22
        iban:
          type: string
          description: Virtual IBAN
          example: PT50000000000000000000000
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 3ce815ab-c16a-4b83-88ed-16f260cdf047
        key:
          type: string
          description: Any value that will help the merchant manage the transaction on his database
          example: Example Key
        date:
          type: string
          format: 'Y-m-d H:i:s'
          example: '2022-01-01 10:20:30'
        values:
          type: object
          properties:
            requested:
              type: number
              format: double
              example: 15.63
            paid:
              type: number
              format: double
              example: 15.63
            fixed_fee:
              type: number
              format: double
              example: 0.3
            variable_fee:
              type: number
              format: double
              example: 3.3
            tax:
              type: number
              format: double
              example: 2.03
            transfer:
              type: number
              format: double
              example: 10
        transfer_date:
          type: string
          format: Y-m-d
          example: '2022-12-12'
        document_number:
          type: string
          description: Unique document number used for Easypay Invoice
          example: CLIENTIDTEST2345678201808010900
    Config_Details:
      type: object
      properties:
        generic:
          type: string
          description: URL for generic notification
          default: 'https://www.easypay.pt/generic'
        authorisation:
          type: string
          description: URL for authorisation notification
          default: 'https://www.easypay.pt/authorisation'
        transaction:
          type: string
          description: URL for transaction notification
          default: 'https://www.easypay.pt/transaction'
        visa_fwd:
          type: string
          description: URL for redirect clients on credit card forward
          default: 'https://www.easypay.pt/visa_fwd'
        visa_detail:
          type: string
          description: URL for credit card payment detail
          default: 'https://www.easypay.pt/visa_detail'
        account:
          type: string
          description: easypay account UUID
          default: b2080452-bad1-4455-8ae7-9f5ea552a274
        payment_methods:
          type: array
          description: payment methods allowed
          items:
            type: string
            description: payment method
            example: mb
    Notification_Generic:
      type: object
      properties:
        id:
          type: string
          description: ID of the related notified resource
          format: uuid
          example: 1bbc14c3-8ca8-492c-887d-1ca86400e4fa
        key:
          type: string
          description: Merchant identification key
          example: Example Key
        type:
          type: string
          example: capture
          enum:
            - authorisation
            - capture
            - frequent_create
            - void
            - refund
            - chargeback
            - subscription_create
            - subscription_capture
            - out_payment
        status:
          type: string
          example: success
          enum:
            - failed
            - success
        messages:
          type: array
          items:
            type: string
            example: Your request was successfully created
        date:
          type: string
          format: 'Y-m-d H:i:s'
          example: '2022-01-01 10:20:30'
    Notification_Capture:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_AccountID'
    Notification_Authorisation:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_AccountID'
        - $ref: '#/components/schemas/Properties_Has_AuthorisationID'
    Capture:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Properties_Has_Descriptive'
        - $ref: '#/components/schemas/Properties_Has_Value'
    Payment_FrequentWithTransactions:
      allOf:
        - $ref: '#/components/schemas/Payment_Frequent'
      title: ''
    Payment_Frequent_Transaction:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Properties_Has_Key'
        - $ref: '#/components/schemas/Payment_Frequent_Method_Request'
    Payment_Frequent_Patchable:
      allOf:
        - $ref: '#/components/schemas/Payment_Frequent_Base'
        - $ref: '#/components/schemas/Properties_Has_SddMandate'
    Payment_Frequent_Method_Request:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Payment_Frequent_Method_Available'
      required:
        - method
    Payment_Frequent_Method_Available:
      type: string
      enum:
        - mb
        - cc
        - dd
        - mbw
        - vi
      example: dd
    Payment_Frequent_Method_Response:
      type: object
      properties:
        method:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/Payment_Frequent_Method_Available'
            sdd_mandate:
              type: object
              allOf:
                - $ref: '#/components/schemas/SddMandate'
                - $ref: '#/components/schemas/Properties_Has_ReferenceAdc'
      title: ''
    Payment_Frequent_Authorisation:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Properties_Has_Key'
        - $ref: '#/components/schemas/Authorisation_Status'
        - $ref: '#/components/schemas/Properties_Has_Value'
    Payment_Frequent_Base:
      allOf:
        - $ref: '#/components/schemas/Payment_Base'
        - $ref: '#/components/schemas/Properties_Has_MinMaxValue'
    Payment_OutPayment:
      title: out_payment
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Payment_OutPayment_Base'
        - $ref: '#/components/schemas/Payment_OutPayment_Method_Response'
    Payment_Subscription:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Payment_Subscription_Base'
        - $ref: '#/components/schemas/Payment_Subscription_Method_Response'
        - $ref: '#/components/schemas/Properties_Has_CreatedAt'
    Payment_Capture:
      type: object
      properties:
        capture:
          type: object
          description: Only required if 'type' is 'sale' and the payment method is 'mbw'
          properties:
            transaction_key:
              maxLength: 50
              type: string
              description: Your internal key identifying this capture
            capture_date:
              type: string
              format: Y-m-d
            account:
              type: object
              description: Optional - only applicable to multi-account clients
              properties:
                id:
                  type: string
                  description: Account Uuid to credit the captured funds
                  format: uuid
                  example: 22ea3cc9-424b-489a-91b7-8955f643dc93
              required:
                - id
            splits:
              type: array
              description: 'Optional: only used for split payments'
              items:
                $ref: '#/components/schemas/Splits_Details'
            descriptive:
              type: string
              description: This will appear in the bank statement/mbway application
              example: Easypay Transaction 12312
              maxLength: 255
          required:
            - descriptive
    Payment_Single_Transaction:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - $ref: '#/components/schemas/Payment_Single_Method_Request'
    Payment_Single_Patchable:
      allOf:
        - $ref: '#/components/schemas/Payment_Single_Base'
        - $ref: '#/components/schemas/Payment_Single_Method_Request'
        - $ref: '#/components/schemas/Properties_Has_AccountID'
        - $ref: '#/components/schemas/Properties_Has_SddMandate'
    Payment_Single_Method_Request:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Payment_Single_Method_Available'
      required:
        - method
    Payment_Single_Method_Available:
      type: string
      enum:
        - mb
        - cc
        - mbw
        - dd
        - bb
        - vi
        - uf
        - sc
      description: It is not possible to edit after it's creating.
    Payment_Single_Method_Response:
      type: object
      properties:
        method:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/Payment_Single_Method_Available'
            sdd_mandate:
              type: object
              allOf:
                - $ref: '#/components/schemas/SddMandate'
                - $ref: '#/components/schemas/Properties_Has_ReferenceAdc'
    Payment_Single_Base:
      allOf:
        - $ref: '#/components/schemas/Payment_Base'
        - $ref: '#/components/schemas/Properties_Has_Value'
    Payment_Subscription_Transaction:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - $ref: '#/components/schemas/Payment_Subscription_Method_Request'
    Payment_Subscription_Patchable:
      allOf:
        - $ref: '#/components/schemas/Payment_Base'
        - $ref: '#/components/schemas/Properties_Has_Value'
        - $ref: '#/components/schemas/Properties_Has_MaxCaptures'
        - $ref: '#/components/schemas/Properties_Has_Failover'
        - $ref: '#/components/schemas/Properties_Has_Retries'
        - $ref: '#/components/schemas/Properties_Has_SddMandate'
    Payment_Subscription_Method_Request:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Payment_Subscription_Method_Available'
    Payment_Subscription_Method_Available:
      type: string
      enum:
        - cc
        - dd
    Payment_Subscription_Method_Response:
      type: object
      properties:
        method:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/Payment_Subscription_Method_Available'
            sdd_mandate:
              type: object
              allOf:
                - $ref: '#/components/schemas/SddMandate'
                - $ref: '#/components/schemas/Properties_Has_ReferenceAdc'
    Payment_Subscription_Base:
      allOf:
        - $ref: '#/components/schemas/Payment_Base'
        - $ref: '#/components/schemas/Properties_Has_Value'
        - $ref: '#/components/schemas/Properties_Has_Frequency'
        - $ref: '#/components/schemas/Properties_Has_MaxCaptures'
        - $ref: '#/components/schemas/Properties_Has_StartTime'
        - $ref: '#/components/schemas/Properties_Has_Failover'
        - $ref: '#/components/schemas/Properties_Has_CaptureNow'
        - $ref: '#/components/schemas/Properties_Has_Retries'
      title: ''
      description: ''
    Payment_OutPayment_Transaction:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - $ref: '#/components/schemas/Payment_OutPayment_Method_Request'
        - $ref: '#/components/schemas/Properties_Has_CreatedAt'
    Payment_OutPayment_Method_Request:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Payment_OutPayment_Method_Available'
      required:
        - method
    Payment_OutPayment_Method_Available:
      type: string
      default: transfer
      enum:
        - transfer
    Payment_OutPayment_Method_Status:
      type: object
      properties:
        status:
          type: string
          example: pending
          enum:
            - pending
            - delayed
            - success
            - deleted
    Payment_OutPayment_Method_Response:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_OutAccountID'
    Payment_OutPayment_Base:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_Customer'
        - $ref: '#/components/schemas/Properties_Has_Key'
        - $ref: '#/components/schemas/Properties_Has_Value'
        - $ref: '#/components/schemas/Properties_Has_OutType'
        - $ref: '#/components/schemas/Properties_Has_ScheduleAt'
        - $ref: '#/components/schemas/Properties_Has_AccountID'
        - $ref: '#/components/schemas/Properties_Has_OutAccount'
    Payment_OutPaymentWithTransactions:
      allOf:
        - $ref: '#/components/schemas/Payment_OutPayment'
    Payment_Recurring:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Payment_Recurring_Base'
        - $ref: '#/components/schemas/Payment_Recurring_Method_Response'
    Payment_SubscriptionWithTransactions:
      allOf:
        - $ref: '#/components/schemas/Payment_Subscription'
    Payment_Frequent:
      title: payment
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Properties_Has_CreatedAt'
        - $ref: '#/components/schemas/Payment_Frequent_Base'
        - $ref: '#/components/schemas/Payment_Frequent_Method_Response'
    Payment_SingleWithTransactions:
      allOf:
        - $ref: '#/components/schemas/Payment_Single'
    Payment_Single:
      title: payment
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Payment_Single_Base'
        - $ref: '#/components/schemas/Payment_Single_Method_Response'
        - $ref: '#/components/schemas/Properties_Has_PaymentStatus'
        - $ref: '#/components/schemas/Properties_Has_PaidAt'
        - $ref: '#/components/schemas/Properties_Has_CreatedAt'
    Payment_RecurringWithTransactions:
      allOf:
        - $ref: '#/components/schemas/Payment_Recurring'
    Payment_Base:
      allOf:
        - $ref: '#/components/schemas/Capture'
        - $ref: '#/components/schemas/Properties_Has_ExpirationTime'
        - $ref: '#/components/schemas/Properties_Has_Currency'
        - $ref: '#/components/schemas/Properties_Has_Customer'
        - $ref: '#/components/schemas/Properties_Has_Key'
        - $ref: '#/components/schemas/Properties_Has_Key'
    Payment_Recurring_Transaction:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - $ref: '#/components/schemas/Payment_Recurring_Method_Request'
    Payment_Recurring_Patchable:
      allOf:
        - $ref: '#/components/schemas/Payment_Subscription_Base'
        - $ref: '#/components/schemas/Payment_Subscription_Method_Response'
        - $ref: '#/components/schemas/Properties_Has_AccountID'
    Payment_Recurring_Method_Request:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Payment_Recurring_Method_Available'
    Payment_Recurring_Method_Available:
      type: string
      enum:
        - cc
        - dd
        - mbw
    Payment_Recurring_Method_Response:
      type: object
      properties:
        method:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/Payment_Recurring_Method_Available'
    Payment_Recurring_Base:
      allOf:
        - $ref: '#/components/schemas/Payment_Base'
        - $ref: '#/components/schemas/Properties_Has_MinMaxValue'
        - $ref: '#/components/schemas/Properties_Has_Frequency'
        - $ref: '#/components/schemas/Properties_Has_MaxCaptures'
    SddMandate_Details:
      required:
        - account_holder
        - email
        - iban
        - name
        - phone
      type: object
      properties:
        iban:
          maxLength: 34
          type: string
          example: PT50002700000001234567833
        key:
          maxLength: 255
          type: string
          description: Custom string controlled by our clients
          example: Key Example
        name:
          maxLength: 100
          type: string
          example: Name Example
        email:
          maxLength: 50
          type: string
          example: customer@example.com
        phone:
          maxLength: 20
          type: string
          example: '911234567'
        account_holder:
          maxLength: 100
          type: string
          description: Bank account holder name
          example: Acount Name Example
        country_code:
          type: string
          description: Bank account country code
          example: PT
        max_num_debits:
          type: string
          description: 'Optional: Max number of debits described in SDD Mandate'
          example: '12'
    SddMandate_Identification:
      type: object
      properties:
        id:
          type: string
          description: Optional - unique identifier from previous created mandates
          example: '12345678901'
    Transfer_Details:
      type: object
      properties:
        to:
          type: string
          format: IBAN or CIN uuid
        value:
          type: number
          example: 250
        date:
          type: string
          description: Date to execute the transfer
          format: Y-m-d
        captive_balance_immediately:
          type: boolean
          description: Send true if you want to captive the balance immediately
          default: false
    Transfer_Identification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - processing
            - transferred
            - failed
    Authorisation_AuthorisationMethod_Properties_Status_Pending:
      type: object
      properties:
        status:
          type: string
          example: pending
    Authorisation_AuthorisationMethod_Properties_Status:
      type: object
      properties:
        status:
          type: string
          example: pending
          enum:
            - waiting
            - pending
            - active
            - failed
            - canceled
            - deleted
    Authorisation_AuthorisationMethod_Pending:
      allOf:
        - $ref: '#/components/schemas/Authorisation_AuthorisationMethod_Base'
        - $ref: '#/components/schemas/Authorisation_AuthorisationMethod_Properties_Status_Pending'
    Authorisation_AuthorisationMethod_Base:
      type: object
      properties:
        entity:
          type: integer
          example: 10611
        reference:
          type: string
          example: '987654321'
        url:
          type: string
          format: url
          example: 'https://www.easypay.pt/_s/c11.php?e=10611&r=987654321&v=19&t_key=example+key&c=EN&l=EN'
        last_four:
          type: string
          description: Last 4 digits of the  submitted Credit Card
          example: '1234'
        card_type:
          type: string
          description: 'MasterCard, VISA'
          example: VISA
        expiration_date:
          type: string
          format: mm/yy
          example: 01/22
    Authorisation_DetailsWithTransactions:
      allOf:
        - $ref: '#/components/schemas/Authorisation_Details'
    Authorisation_AuthorisationMethod:
      allOf:
        - $ref: '#/components/schemas/Authorisation_AuthorisationMethod_Base'
        - $ref: '#/components/schemas/Authorisation_AuthorisationMethod_Properties_Status'
    Authorisation_Details_Transaction:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Properties_Has_Key'
        - $ref: '#/components/schemas/Authorisation_Details_Method_Request'
    Authorisation_Details_Patchable:
      allOf:
        - $ref: '#/components/schemas/Authorisation_Details_Base'
        - $ref: '#/components/schemas/Authorisation_Details_Method_Response'
        - $ref: '#/components/schemas/Properties_Has_AccountID'
    Authorisation_Details_Method_Request:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Authorisation_Details_Method_Available'
    Authorisation_Details_Method_Available:
      type: string
      enum:
        - mb
        - cc
        - dd
        - mbw
    Authorisation_Details_Method_Response:
      type: object
      properties:
        method:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/Authorisation_Details_Method_Available'
    Authorisation_Details_Base:
      allOf:
        - $ref: '#/components/schemas/Authorisation_Base'
        - $ref: '#/components/schemas/Properties_Has_ValuePaidValue'
    Authorisation_Details:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
        - $ref: '#/components/schemas/Authorisation_Details_Base'
        - $ref: '#/components/schemas/Authorisation_Details_Method_Response'
    Authorisation_Status:
      title: status
      type: object
      properties:
        status:
          type: string
          example: pending
          enum:
            - success
            - pending
            - failed
    Authorisation_Message:
      type: object
      properties:
        message:
          type: string
    Authorisation_Base:
      allOf:
        - $ref: '#/components/schemas/Authorisation_Status'
        - $ref: '#/components/schemas/Authorisation_Message'
        - $ref: '#/components/schemas/Properties_Has_Currency'
        - $ref: '#/components/schemas/Properties_Has_Customer'
        - $ref: '#/components/schemas/Properties_Has_Key'
    Transfer:
      allOf:
        - $ref: '#/components/schemas/Transfer_Identification'
        - $ref: '#/components/schemas/Transfer_Details'
    SddMandate:
      description: Only required if 'method' is 'dd'
      allOf:
        - $ref: '#/components/schemas/SddMandate_Identification'
        - $ref: '#/components/schemas/SddMandate_Details'
    Checkout_Manifest:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_ID'
    Checkout_Details:
      type: object
      x-examples:
        example-1:
          status: success
          message:
            - checkout is not finished yet
          checkout:
            id: ced0ff93-d64f-47fc-b29e-4e5481cb38ec
            status: pending
          payment:
            id: df9d691d-f7fe-4ce4-8205-323888a769f3
            status: success
            methods:
              - mb
              - cc
              - mbw
              - vi
              - uf
            expiration_time: '2022-12-12T16:05:00Z'
            currency: EUR
            key: Example Key
            max_value: 20
            min_value: 2
            frequency: 1W
            max_captures: 10
            start_time: '2022-12-05T12:05:00Z'
            failover: true
            capture_now: true
            retries: 2
          value: 17.5
      properties:
        status:
          type: string
          enum:
            - failed
            - success
        message:
          type: array
          items:
            type: string
        checkout:
          type: object
          properties:
            id:
              type: string
            status:
              type: string
              enum:
                - pending
                - canceled
                - complete
        payment:
          type: object
          properties:
            id:
              type: string
            status:
              type: string
              enum:
                - waiting
                - pending
                - active
                - deleted
            methods:
              type: array
              items:
                type: string
                enum:
                  - mb
                  - cc
                  - mbw
                  - dd
                  - vi
                  - uf
                  - sc
            expiration_time:
              type: string
            currency:
              type: string
            key:
              type: string
            max_value:
              type: integer
            min_value:
              type: integer
            frequency:
              type: string
            max_captures:
              type: integer
            start_time:
              type: string
            failover:
              type: boolean
            capture_now:
              type: boolean
            retries:
              type: integer
        value:
          type: number
    Mbway_sdk:
      type: object
      properties:
        purchase_token:
          type: string
          example: 626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B
        initial_timestamp:
          type: string
          example: '2018-01-01 23:59:59'
        merchant_operation_id:
          type: string
          description: unique-concatenation between client identifier and client operation id (total max 20 chars)
          example: TESTACCOUNT5436
        payload:
          type: string
          example: '{''purchase_token'':''EDEB342D3588DDDEEE3E070476E72A6B222E3456C1C825D3E89A734005CE81F69986045424984F55B3233CBFD090A8A564071BBB493F34C4849C964'',''initial_timestamp'':''2018-09-20T10:46:08+01:00'',''merchant_operation_id'':''TESTACCOUNT5436'',''payload'':{''amount'':1000,''currencyCode'':''9782''}}'
    Properties_Has_ReferenceAdc:
      type: object
      properties:
        reference_adc:
          type: string
          example: '987654321123'
    Properties_Has_Value:
      type: object
      properties:
        value:
          minimum: 0.5
          type: number
          description: Value will be rounded to 2 decimals
          format: double
          example: 17.5
      required:
        - value
    Properties_Has_Key:
      type: object
      properties:
        key:
          maxLength: 50
          type: string
          description: Merchant identification key
          example: Example Key
    Properties_Has_StartTime:
      type: object
      properties:
        start_time:
          type: string
          description: Date to start the billing cycles
          format: 'Y-m-d H:i'
          example: '2017-12-12 16:05'
    Properties_Has_OutAccount:
      type: object
      properties:
        out_account:
          required:
            - account_holder
            - email
            - iban
            - phone
          type: object
          properties:
            account_holder:
              maxLength: 100
              type: string
              description: Bank account holder name
              example: Acount Name Example
            iban:
              maxLength: 34
              type: string
              example: PT50002700000001234567833
            email:
              maxLength: 50
              type: string
              example: customer@example.com
            phone:
              maxLength: 20
              type: string
              example: '911234567'
            key:
              maxLength: 255
              type: string
              description: Custom string controlled by our clients
              example: Key Example
            country_code:
              type: string
              description: Bank account country code
              example: PT
    Properties_Has_ListMetaData:
      type: object
      properties:
        meta:
          type: object
          properties:
            page:
              type: object
              properties:
                current:
                  type: integer
                  example: 2
                total:
                  type: integer
                  example: 4
            records:
              type: object
              properties:
                total:
                  type: integer
                  example: 50
                per_page:
                  type: integer
                  example: 15
            links:
              type: object
              properties:
                first:
                  type: string
                  example: 'https://......?page=1'
                prev:
                  type: string
                  example: 'https://......?page=1'
                next:
                  type: string
                  example: 'https://......?page=3'
                last:
                  type: string
                  example: 'https://......?page=4'
    Properties_Has_AccountID:
      type: object
      properties:
        account:
          type: object
          allOf:
            - $ref: '#/components/schemas/Properties_Has_ID'
    Properties_Has_MinMaxValue:
      type: object
      properties:
        max_value:
          minimum: 0
          type: number
          description: Value will be rounded to 2 decimals
          format: double
          example: 20
        min_value:
          minimum: 0
          type: number
          description: Value will be rounded to 2 decimals
          format: double
          example: 2
        unlimited_payments:
          type: boolean
          description: 'Transactions will be unlimited, max or min value will be refreshed on each payment'
          example: false
          default: true
    Properties_Has_Frequency:
      type: object
      properties:
        frequency:
          type: string
          example: 1D
          enum:
            - 1D
            - 1W
            - 2W
            - 1M
            - 2M
            - 3M
            - 4M
            - 6M
            - 1Y
            - 2Y
            - 3Y
    Properties_Has_ScheduleAt:
      type: object
      properties:
        schedule_at:
          type: string
          description: Schedule date to execute the payment
          format: 'Y-m-d H:i:s'
          example: '2017-12-12 16:05:02'
    Properties_Has_CreatedAt:
      type: object
      properties:
        created_at:
          type: string
          description: Date when payment was created
          format: 'Y-m-d H:i:s'
          example: '2017-12-12 16:05:02'
    Properties_Has_ReportID:
      type: object
      properties:
        report:
          type: object
          allOf:
            - $ref: '#/components/schemas/Properties_Has_ID'
    Properties_Has_SddMandate:
      type: object
      properties:
        sdd_mandate:
          $ref: '#/components/schemas/SddMandate'
      title: ''
    Properties_Has_CustomerID:
      type: object
      properties:
        customer:
          type: object
          allOf:
            - $ref: '#/components/schemas/Properties_Has_ID'
    Properties_Has_Currency:
      type: object
      properties:
        currency:
          type: string
          example: EUR
          default: EUR
          enum:
            - EUR
            - BRL
    Properties_Has_OutType:
      type: object
      properties:
        type:
          type: string
          description: Optional - only applicable to method transfer
          example: normal
          default: normal
          enum:
            - normal
            - instant
    Properties_Has_PaymentStatus:
      type: object
      properties:
        payment_status:
          type: string
          description: Status of the single payment
          example: paid
          enum:
            - pending
            - paid
            - authorised
            - error
            - deleted
            - failed
            - active
            - voided
    Properties_Has_MaxCaptures:
      type: object
      properties:
        max_captures:
          type: number
          description: Required only when no expiration_time is set
          example: 10
    Properties_Has_Retries:
      type: object
      properties:
        retries:
          type: number
          description: 'Number of retries on every payment cycle, the chosen frequency will define the max number of possible retries'
          example: 2
    Properties_Has_AuthorisationID:
      type: object
      properties:
        authorisation:
          type: object
          allOf:
            - $ref: '#/components/schemas/Properties_Has_ID'
    Properties_Has_PaidAt:
      type: object
      properties:
        paid_at:
          type: string
          description: Date when the single payment was paid
          format: 'Y-m-d H:i:s'
          example: '2017-12-12 16:05:02'
    Properties_Has_OutAccountID:
      type: object
      properties:
        out_account:
          type: object
          allOf:
            - $ref: '#/components/schemas/Properties_Has_ID'
    Properties_Has_ValuePaidValue:
      type: object
      properties:
        value:
          type: number
          format: double
          example: 10
        value_captured:
          type: number
          format: double
          example: 10
    Properties_Has_Descriptive:
      type: object
      properties:
        descriptive:
          maxLength: 255
          type: string
          description: This will appear in the bank statement/mbway application
          example: Descriptive Example
    Properties_Has_Failover:
      type: object
      properties:
        failover:
          type: boolean
          description: 'After all retries failed, the payment cycle can have another try with another Single Method'
          example: true
          default: false
    Properties_Has_ExpirationTime:
      type: object
      properties:
        expiration_time:
          type: string
          description: Optional
          format: 'Y-m-d H:i'
          example: '2017-12-12 16:05'
    Properties_Has_Timestamp:
      type: object
      properties:
        timestamp:
          type: string
          description: 'Unix timestamp UTC, must be no more than 1 minute before or after real time, if not the strong authentication signature will not be valid'
          example: '1136239445'
    Properties_Has_Customer:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
    Properties_Has_Alias:
      type: object
      properties:
        alias:
          type: string
          description: MBWAY Alias (only for mobile implementation using MBWAY SDK)
          example: 626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B
    Properties_Has_Type:
      type: object
      properties:
        type:
          type: string
          description: 'Optional - only applicable to method cc, mbw and uf'
          example: sale
          default: sale
          enum:
            - sale
            - authorisation
      description: ''
    Properties_Has_Array_Type:
      type: object
      x-examples:
        example-1:
          type:
            - single
            - frequent
            - subscription
      properties:
        type:
          type: array
          description: 'Only the first value in the Array is considered (e.g. [''single'', ''frequent''] would be equivalent to [''single'']).'
          items:
            type: string
            enum:
              - single
              - frequent
              - subscription
      required:
        - type
    Properties_Has_CaptureNow:
      type: object
      properties:
        capture_now:
          type: boolean
          description: This option will force schedule a immediate capture and schedule next one for start_time
          example: true
          default: false
    Properties_Has_ID:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 4c67e74b-a256-4e0a-965d-97bf5d01bd50
    StatusFailed:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: array
          items:
            type: string
            example: Custom error message
    PaymentMethod:
      title: method
      allOf:
        - $ref: '#/components/schemas/PaymentMethod_Base'
        - $ref: '#/components/schemas/PaymentMethod_Properties_Status'
    Report_DetailsFull:
      type: object
      properties:
        type:
          type: string
          example: payment
          enum:
            - customer
            - payment
            - account
        date_range:
          type: object
          properties:
            init:
              type: string
              description: Init data can't be older than 1 or 2 years
              format: 'Y-m-d H:i:s'
            end:
              type: string
              description: 'If not set, this field should be evaluated as the moment of the request'
              format: 'Y-m-d H:i:s'
        operation:
          type: string
          description: 'This is something like a sub-type of the report, list this, list that, list all, etc'
          example: refunds
        customer:
          type: object
          allOf:
            - $ref: '#/components/schemas/Customer'
        account:
          type: object
          properties:
            id:
              type: string
              description: Account Uuid to credit the captured funds
              format: uuid
              example: 22ea3cc9-424b-489a-91b7-8955f643dc93
          description: Optional - only applicable to multi-account clients
        payment:
          type: object
          properties:
            type:
              type: string
              example: single
              enum:
                - single
                - frequent
                - subcription
    Report_Transactions_Transaction:
      title: transaction
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d9d7368e-9f6f-4060-b56f-eec3d78a29a9
        key:
          type: string
          description: Any value that will help the merchant manage the transaction on his database
          example: Example Key
        descriptive:
          type: string
          description: Any descriptive information that will help the merchant manage the transaction on his database
          example: Example Descriptive
        date:
          type: string
          format: 'Y-m-d H:i:s'
          example: '2022-01-01 10:20:30'
        values:
          type: object
          properties:
            requested:
              type: number
              format: double
              example: 15.63
            paid:
              type: number
              format: double
              example: 15.63
            fixed_fee:
              type: number
              format: double
              example: 0.3
            variable_fee:
              type: number
              format: double
              example: 3.3
            tax:
              type: number
              format: double
              example: 2.03
            transfer:
              type: number
              format: double
              example: 10
        transfer_date:
          type: string
          format: Y-m-d
          example: '2022-12-12'
        transfer_batch:
          type: string
          description: The batch where this transaction has transfered
          example: '100212'
        document_number:
          type: string
          description: Unique document number used for Easypay Invoice
          example: CLIENTIDTEST2345678201808010900
        payment_type:
          type: string
          description: 'Payment Type: frequent or single or subscription'
          example: single
        payment_id:
          type: string
          description: 'Payment Id: frequent id or single id or subscription id'
          format: uuid
          example: bfd3518d-fe73-4fb8-b8e6-0ce38cd3ced8
        payment_key:
          type: string
          description: 'Payment Key: frequent key or single key or subscription key'
          example: Key Example
        payment_transaction_key:
          type: string
          description: 'Payment Transaction Key: capture transaction key'
          example: Transaction Key Example
        payment_account:
          type: object
          properties:
            id:
              type: string
              description: Account Uuid credited with the captured funds
              format: uuid
              example: 22ea3cc9-424b-489a-91b7-8955f643dc93
          description: Optional - only applicable to multi-account clients
    Report_Details:
      allOf:
        - $ref: '#/components/schemas/Properties_Has_AccountID'
        - $ref: '#/components/schemas/Properties_Has_CustomerID'
    StatusDetails:
      type: object
      properties:
        status:
          type: string
          example: ok
        message:
          type: array
          items:
            type: string
            example: Your request was successfully created
    Customer:
      allOf:
        - $ref: '#/components/schemas/Customer_Identification'
        - $ref: '#/components/schemas/Customer_Details'
    Customer_Details:
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: Required if 'method' is 'mbw'
          example: Customer Example
        email:
          type: string
          maxLength: 70
          example: customer@example.com
          format: email
        phone:
          maxLength: 15
          type: string
          description: Required if 'method' is 'mbw'
          example: '911234567'
        phone_indicative:
          maxLength: 5
          type: string
          default: 351
        fiscal_number:
          maxLength: 20
          type: string
          description: Fiscal Number must be prefixed with country code
          example: PT123456789
        key:
          maxLength: 255
          type: string
          example: Key Example
        language:
          type: string
          description: ISO Alpha-2 code
          example: PT
          default: PT
      required:
        - email
    Customer_Identification:
      type: object
      properties:
        id:
          type: string
          description: Optional - uuid from previous created customers
          format: uuid
          example: 22ea3cc9-424b-489a-91b7-8955f643dc93
      description: ''
    Splits_MinimalDetails:
      allOf:
        - $ref: '#/components/schemas/PaymentMethod_Properties_Status'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            split_key:
              type: string
              maxLength: 50
              description: Your internal key identifying this split
    Splits_Details:
      type: object
      properties:
        split_key:
          maxLength: 50
          type: string
          description: Your internal key identifying this split
        split_descriptive:
          maxLength: 255
          type: string
          description: A small observation for this split
          example: Descriptive Example
        value:
          type: number
          exclusiveMinimum: false
          description: 'Total split funds, rounded with 2 decimals'
          format: double
          example: 1
          minimum: 0.1
        account:
          type: object
          description: Account owner of this split
          properties:
            id:
              type: string
              description: Account Uuid to credit the split funds
              format: uuid
              example: 22ea3cc9-424b-489a-91b7-8955f643dc93
        margin_value:
          type: number
          exclusiveMinimum: false
          description: 'Total margin funds, rounded with 2 decimals'
          format: double
          example: 0.1
          minimum: 0.1
        margin_account:
          type: object
          description: Account used for a margin from this split
          properties:
            id:
              type: string
              description: Account Uuid to credit the margin funds
              format: uuid
              example: 22ea3cc9-424b-489a-91b7-8955f643dc93
      required:
        - value
    Response-Meta:
      type: object
      properties:
        page:
          type: object
          properties:
            current:
              type: integer
            total:
              type: integer
        records:
          type: object
          properties:
            total:
              type: integer
            per_page:
              type: integer
        links:
          type: object
          properties:
            first:
              type: string
            prev:
              type: string
            next:
              type: string
            last:
              type: string
      x-examples:
        example-1:
          page:
            current: 1
            total: 8
          records:
            total: 20
            per_page: 20
          links:
            first: '?page=1'
            prev: ''
            next: '?page=2'
            last: '?page=8'
    Response-Capture-Minimal:
      type: object
      x-examples:
        example-1:
          capture:
            id: 90400a93-cf7a-40aa-9151-7bd853ad8db4
            splits: []
          id: 4c67e74b-a256-4e0a-965d-97bf5d01bd50
      properties:
        id:
          type: string
        capture:
          type: object
          properties:
            id:
              type: string
            splits:
              type: array
              items:
                $ref: '#/components/schemas/Splits_MinimalDetails'
  responses:
    Response_Http_Codes_204:
      description: No content
      content:
        '*/*':
          schema:
            type: object
    Response_Http_Codes_304:
      description: Not Modified
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_400:
      description: Bad Request
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_401:
      description: Unauthorized
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_403:
      description: Forbidden
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_404:
      description: Resource Not Found
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_412:
      description: Precondition Failed
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_413:
      description: Request Entity Too Large
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_422:
      description: Unprocessable Entity
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_428:
      description: Precondition Required
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_429:
      description: Too Many Requests
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
    Response_Http_Codes_500:
      description: Internal Error
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/StatusFailed'
        application/xml:
          example: |-
            <response>
               <status>error</status>
               <message>
                  <string>Custom error message</string>
               </message>
            </response>
  parameters:
    Request_Auth_AccountId:
      name: AccountId
      in: header
      description: Account number
      required: true
      schema:
        type: string
    Request_Auth_ApiKey:
      name: ApiKey
      in: header
      description: API authentication key
      required: true
      schema:
        type: string
    Request_Auth_Signature:
      name: Signature
      in: header
      description: RSA signature Base64 generated with algorithm SHA256 using a account strong authentication private Key on the raw body or id
      schema:
        type: string
    Request_Parameters_ID:
      name: id
      in: query
      description: Resource Identification
      required: true
      schema:
        type: string
        format: uuid
  securitySchemes:
    accountId:
      type: apiKey
      description: This is the identification for the Easypay Client Account
      name: AccountId
      in: header
    apiKey:
      type: apiKey
      description: This is the counter key for the used Account Id
      name: ApiKey
      in: header